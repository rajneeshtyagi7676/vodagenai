swagger: "2.0"
info:
  description: |
   This API manages the customer resource. It enables the retrieval of customer along with engaged party, related part, accounts, payment method and credit profile.  In addition, the API enables to create, delete, and modify customer.
   
   ASGW release number - 1.0.1.1
  version: 1.0.1
  title: TMF629 Customer Managements
host: "api.test.asgw.sol-vf.de"
basePath: /customerManagement/v1
tags:
- name: "Customer"
- name: "Customer History"
- name: "customerType"
- name: "customerSubType"
- name: "customerStatus"
schemes:
- "https"
securityDefinitions:
  Bearer:
    type: oauth2
    flow: application
    tokenUrl: https://api.test.asgw.sol-vf.de/oauth2/v1/accesstoken?grant_type=client_credentials
produces:
- "application/json;charset=utf-8"
paths:
  /customer:
    get:
      tags:
      - "Customer"
      summary: "Retrieve customers based on given filters"
      description: "This operation provides an ability to filter Customer based on\
        \ different criteria. \n\n###### TMF Open API compliant        \n\n**Filters\
        \ &#58;**\nSupported filters and filter operations using ?filters? directive\
        \ are documented in configuration, under the following parameter&#58;  \n\
        \  - Supported Filter\n    - (Configuration &#58; &lt;attributeName&gt;)\n\
        \  - Supported Operators\n    - (Configuration &#58; &lt;attributeName&gt;.supportedOperators)\n\
        \n**Mandatory &#58;**\n  - One of the available filter criteria (as defined\
        \ in filter configuration) must be provided.\n  \n**Additional Roles**\n \
        \ - D1_Customer_retrieveClosedCustomer - To retrieve closed customers, this\
        \ additional role is required.\n  \n"
      operationId: "searchCustomer"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "name"
        in: "query"
        description: "The name of Customer\n"
        required: false
        type: "string"
      - name: "id"
        in: "query"
        description: "The id of Customer\n"
        required: false
        type: "string"
      - name: "href"
        in: "query"
        description: "href for the customer\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        description: "This parameter has been deprecated, use filters instead\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "filters"
        in: "query"
        description: "The filter sets criteria for retrieving a subset of resources\
          \ from a collection, using JSON Path syntax to express the conditions for\
          \ retrieval. Actual supported filter expressions and operators are detailed\
          \ in the API operation description.\n\nNotes&#58;\n- Attribute values that\
          \ represent a Date are expected in UTC format *yyyy-mm-ddThh&#58;mm&#58;ssZ*\n\
          - Attribute values and operators MUST be properly URL-encoded\n- Encrypted\
          \ attributes (if any) are supported with Equality (==) operator only\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response requested\
          \ by client\n"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response\
          \ requested by client\n"
        required: false
        type: "integer"
        format: "int32"
      - name: "returnTotalCount"
        in: "query"
        description: "Query parameter to specify if we need total count of the records\
          \ to the provided search criteria.\n"
        required: false
        type: "boolean"
      security:
        - Bearer: []
      responses:
        200:
          description: "*OK* - The customer was retrieved successfully.\n"
          headers:
            Etag:
              type: "string"
              description: "entity tag\n"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria\n"
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Customer"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "*Unauthorized* - The server cannot apply the request because\
            \ it lacks valid authentication credentials for the target resource.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        503:
          description: "*Service Unavailable* - The server cannot fulfill the request\
            \ due to a temporary overloading or maintenance of the server. Retry later.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_searchCustomer"
    post:
      tags:
      - "Customer"
      summary: "Create a customer"
      description: "This operation creates a customer along with its related entities.\n\
        A customer can be created by providing engaged party which can be an individual\
        \ or organization.\nFor an individual as engaged party - Providing individual\
        \ as reference or value is supported.\nFor an organization as engaged party\
        \ - Providing organization only as reference is supported.\n\n###### TMF Open\
        \ API compliant\n**Mandatory&#58;**\nIf engagedParty is of type \"PartyRef\"\
        \ then following fields are mandatory&#58;\n  - engagedParty.id\n  - engagedParty.type\n\
        \  - engagedParty.refType\n\nIf engagedParty is of type \"IndividualValue\"\
        \ then following fields are mandatory&#58;\n  - engagedParty.type\n  - engagedParty.refType\n\
        \  - engagedParty.givenName\n  - engagedParty.familiyName          \n  \n\
        If provided &#58; at sub entity level following fields are mandatory\n- BillingAccountValue\
        \ &#58; type\n- FinancialAccountValue &#58; type          \n- paymentMethod\
        \ &#58; id\n- characteristic &#58; name,value\n- relatedParty &#58; id,referredType\n\
        - contactMedium.type=\"email\"\n  - medium.mediumType or medium.type \n  -\
        \ medium.emailAddress\n- contactMedium.type=\"telephone\"\n  - medium.mediumType\
        \ or medium.type\n  - medium.number\n- contactMedium.type=\"postal address\"\
        \ \n  - if address is provided as formatted address then following fields\
        \ are mandatory\n    - medium.mediumType or medium.type\n    - medium.characteristic.type\
        \ or medium.characteristic.contactType\n    - medium.street1\n    - medium.postCode\n\
        \    - medium.country\n  - if address is provided as identifiers then following\
        \ fields are mandatory\n    - medium.mediumType or medium.type\n    - medium.characteristic.type\
        \ or medium.characteristic.contactType\n    - medium.characteristic.place.id\n\
        \    - medium.characteristic.place.referredType (GeographicAddress is supported)\n\
        - externalIdentifier \n  - externalIdentifier.id\n  - externalIdentifier.owner\
        \ or externalIdentifier.externalIdentifierType\n\n**Readonly&#58;**\n  - id\n\
        \  - href\n  - statusDate\n\n**Business rules&#58;**\n- This operation supports\
        \ ReferenceOrValue pattern in the input for following relations. In the output\
        \ the operation always return references to related entities.\n- Create customer\
        \ with organization as engaged party &#58;\n  - Can accept PartyRef as input\
        \ for engagedParty.\n  - Creation of related entities like billing account,\
        \ financial account, payment method, etc. is not supported. The API will ignore\
        \ any such inputs in request.\n  - An organization cannot become an engagedParty\
        \ \n    - If it is already associated as an engagedParty to another customer\
        \ or\n    - If it is already a child organization in any of the existing organization\
        \ hierarchy.\n- Create customer with Individual as engaged party &#58;. \n\
        \  - ***engagedParty*** - can accept either PartyRef or IndividualValue as\
        \ a type \n    a. PartyRef -  Operation will create and associate the customer\
        \ with given Individual\n    b. IndividualValue - Operation will create following\
        \ entities and associate the customer with them \n      1. Customer \n   \
        \      a. if name of the customer is not provided then it would be derived\
        \ from individual formatted name\n      2. Individual \n         a. if individual\
        \ already exist based on individual uniquness , operation will throw an error\n\
        \          \n      3. Financial Account* \n         a. New financial account\
        \ will be created\n      4. Billing Account*\n         a. New billing account\
        \ will be created and will be associated with financial account\n      5.\
        \ By default, the contact medium of engaged party, billing account, and financial\
        \ account will be copied to customer, This behavior is controlled through\
        \ a configuration.\n      6. If the name for financial account or billing\
        \ account are not specified, then by default the name of customer will be\
        \ copied to financial account or billing account\n      \n      - ***Note\
        \ &#58;**. When excludeEntityCreation is not Null or Empty\n          - If\
        \ financial account and/or billing account values/references are sent in input,\
        \ excludeEntityCreation would be ignored.\n          - If financial account\
        \ and/or billing account values/references are not sent in input\n       \
        \     - if excludeEntityCreation == Financial Account &#58;  Creation of both\
        \ Financial Account and Billing Account would be skipped.\n            - if\
        \ excludeEntityCreation == Billing Account &#58;  Financial Account will be\
        \ created however ,creation of Billing Account would be skipped.\n      \n\
        \  - ***account*** - Accepts FinancialAccountValue or BillingAccountValue\
        \ type. \n    a. FinancialAccountValue - Operation will create a new financial\
        \ account with given details.\n    b. BillingAccountValue - Operation will\
        \ create new billing account with given details.\n    c. AccountRef - AccountRef\
        \ for BillingAccount/FinancialAccount will be ignored and always a new BillingAccount/FinancialAccount\
        \ will be created.\n    ***Note*** - Accepting Billing Account or Financial\
        \ account is not applicable when enaged party is organization. An error will\
        \ be thrown.\n\n- For reference data fields if the value is not specified\
        \ then the default value specified in reference data list will be stored in\
        \ entity.               \n\n**Reference value&#58;**\n  The reference values\
        \ are retrieved from the respective reference data API described against each\
        \ attribute. The following list describes example attributes and the corresponding\
        \ API that is used to retrieve valid values, The format is as follows &#58;\
        \ \"&lt;attribute name&gt;(Subdomain &#58; API)\"&#58;\n  - contactMedium.type\
        \ (PartyManagement &#58; GET /contactMedium/type)\n  - status (CustomerManagement\
        \ &#58; GET /customerStatus)\n  - customerSubType (CustomerManagement &#58;\
        \ GET /customerType)\n  - customerType (CustomerManagement &#58; GET /customerType)\n\
        \  - contactMedium.characteristic.type \n    (PartyManagement &#58; GET /EmailMediumType\
        \ or GET /TelephoneMediumType or GET /SocialMediumType) or\n    (GeographicAddressManagement\
        \ &#58; GET /AddressRole)\n  - relatedParty.role(CustomerManagement &#58;\
        \ GET /customerRelatedPartyReferredType)\n  - relatedParty.type(CustomerManagement\
        \ &#58; GET /customerRelatedPartyType)\n \n \r\n **VFDE-Custom-Details**:\
        \ \r\n When a customer is created in full customer setup, then the below field\
        \ is mandatory:\n- account.extensions.legalEntityId, only when account[].type\
        \  is BillingAccountValue \n\nAdditional fields can be sent:\n- engagedParty.extensions.academicTitle\
        \ - can be added when engagedParty.type is IndividualValue; value has to be\
        \ per reference data\n- engagedParty.extensions.comments - can be added when\
        \ engagedParty.type is IndividualValue\n- extensions.migrationInformation.migrationProcess"
      operationId: "createCustomer"
      consumes:
      - "application/json;charset=utf-8"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "excludeEntityCreation"
        in: "query"
        description: "List of Entities to be excluded while customer creation\n\n\
          \ Valid Values are:\n Financial Account\n Billing Account\n"
        required: false
        type: "string"
      - in: "body"
        name: "Customer"
        description: "Details of the Customer\n"
        required: true
        schema:
          $ref: "#/definitions/Customer"
      security:
        - Bearer: []
      responses:
        201:
          description: "*Created* - Customer got created successfully.\n      \n"
          headers:
            Etag:
              type: "string"
              description: "entity tag\n"
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "*Unauthorized* - The server cannot apply the request because\
            \ it lacks valid authentication credentials for the target resource.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        503:
          description: "*Service Unavailable* - The server cannot fulfill the request\
            \ due to a temporary overloading or maintenance of the server. Retry later.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_createCustomer"
  /customer/{customerId}:
    get:
      tags:
      - "Customer"
      summary: "Retrieve a customer"
      description: "This operation retrieves a customer. The embed option is supported\
        \ for engagedParty (?embed=[Individual])\n###### TMF Open API compliant\n\
        **Business Rule&#58;**\n- embed &#58; Individual\n  IndividualValue is provided\
        \ along with Customer.\n- enbed is not supported for Organization engaged\
        \ party.\n   \n**Additional Roles**\n  - D1_Customer_retrieveClosedCustomer\
        \ - To retrieve closed customers, this additional role is required.\n"
      operationId: "getCustomer"
      parameters:
      - name: "customerId"
        in: "path"
        description: "The ID of the customer\n"
        required: true
        type: "string"
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "embed"
        in: "query"
        description: "embed.\n"
        required: false
        type: "string"
      - name: "retrieveSegment"
        in: "query"
        description: "should retrieve segment."
        required: false
        type: "boolean"
      security:
        - Bearer: []
      responses:
        200:
          description: "*OK* - The customer was retrieved successfully.\n"
          headers:
            Etag:
              type: "string"
              description: "entity tag\n"
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "*Unauthorized* - The server cannot apply the request because\
            \ it lacks valid authentication credentials for the target resource.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        503:
          description: "*Service Unavailable* - The server cannot fulfill the request\
            \ due to a temporary overloading or maintenance of the server. Retry later.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getCustomer"
    patch:
      tags:
      - "Customer"
      summary: "Patch a customer"
      description: "This operation allows partial updates to customer resource.\n\n\
        ###### TMF Open API compliant\n**Patchable Elements**\nSupported patchable\
        \ attributes and operations are documented in configuration, under the following\
        \ parameter&#58;  \n\n  - Supported attributes\n    - (Configuration &#58;\
        \  customer.validPatchElementValues)\n    - (Configuration &#58;  customer.validPatchRegexElementValues)\
        \            \n  - Supported operation for each patchable attribute\n    -\
        \ (Configuration &#58;  customer.&lt;attributeName&gt;)            \n\n**Non-patchable\
        \ Characteristics Values**\n- characteristic[name=segment]\n- characteristic[name=hasChildCustomer,\
        \ name=hasParentCustomer, name=customerHierarchyLevel] - cross customer hierarchy\
        \ indicators\n"
      operationId: "patchCustomer"
      consumes:
      - "application/json;charset=utf-8"
      parameters:
      - name: "customerId"
        in: "path"
        description: "The ID of the customer\n"
        required: true
        type: "string"
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "The If-Match HTTP request header makes the request conditional.\
          \ \nFor GET and HEAD methods, the server will send back the requested resource\
          \ only if it matches one of the listed ETags. \nFor PUT and other non-safe\
          \ methods, it will only upload the resource in this case\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - in: "body"
        name: "CustomerPatch"
        description: "This is a patch request to update Customer resource\n"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/PatchElement"
      security:
        - Bearer: []
      responses:
        200:
          description: "*OK* - Customer updated successfully.\n"
          headers:
            Etag:
              type: "string"
              description: "entity tag\n"
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "*Unauthorized* - The server cannot apply the request because\
            \ it lacks valid authentication credentials for the target resource.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        503:
          description: "*Service Unavailable* - The server cannot fulfill the request\
            \ due to a temporary overloading or maintenance of the server. Retry later.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_patchCustomer"
  /customer/{customerId}/addRelatedParty:
    post:
      tags:
      - "Customer"
      summary: "Associate a party with customer"
      description: "This operation associates a party with customer\n\n**Mandatory&#58;**\n\
        - relatedParty.id\n- relatedParty.role\n\n**Reference value&#58;**\n  The\
        \ reference values are retrieved from the respective reference data API described\
        \ against each attribute. The following list describes example attributes\
        \ and the corresponding API that is used to retrieve valid values, The format\
        \ is as follows &#58; \"&lt;attribute name&gt;(Subdomain &#58; API)\"&#58;\n\
        \  \n - relatedParty.role(CustomerManagement &#58; GET /customerRelatedPartyReferredType)\n\
        \ \n"
      operationId: "addRelatedParty"
      consumes:
      - "application/json;charset=utf-8"
      parameters:
      - name: "customerId"
        in: "path"
        description: "The ID of the customer\n"
        required: true
        type: "string"
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "The If-Match HTTP request header makes the request conditional.\
          \ \nFor GET and HEAD methods, the server will send back the requested resource\
          \ only if it matches one of the listed ETags. \nFor PUT and other non-safe\
          \ methods, it will only upload the resource in this case\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - in: "body"
        name: "RelatedParty"
        description: "Details of the Related Party\n"
        required: true
        schema:
          $ref: "#/definitions/RelatedPartyRef"
      security:
        - Bearer: []
      responses:
        200:
          description: "*OK* - The party is associated with customer successfully.\n"
          headers:
            Etag:
              type: "string"
              description: "entity tag\n"
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "*Unauthorized* - The server cannot apply the request because\
            \ it lacks valid authentication credentials for the target resource.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        503:
          description: "*Service Unavailable* - The server cannot fulfill the request\
            \ due to a temporary overloading or maintenance of the server. Retry later.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_addRelatedParty"
  /customer/{customerId}/removeRelatedParty:
    post:
      tags:
      - "Customer"
      summary: "Disassociate a party from customer"
      description: "This operation disassociates a party from customer\n\n**Mandatory&#58;**\n\
        - relatedParty.id\n- relatedParty.role\n\n**Reference value&#58;**\n  The\
        \ reference values are retrieved from the respective reference data API described\
        \ against each attribute. The following list describes example attributes\
        \ and the corresponding API that is used to retrieve valid values, The format\
        \ is as follows &#58; \"&lt;attribute name&gt;(Subdomain &#58; API)\"&#58;\n\
        \  \n - relatedParty.role(CustomerManagement &#58; GET /customerRelatedPartyReferredType)\n"
      operationId: "removeRelatedParty"
      consumes:
      - "application/json;charset=utf-8"
      parameters:
      - name: "customerId"
        in: "path"
        description: "The ID of the customer\n"
        required: true
        type: "string"
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "The If-Match HTTP request header makes the request conditional.\
          \ \nFor GET and HEAD methods, the server will send back the requested resource\
          \ only if it matches one of the listed ETags. \nFor PUT and other non-safe\
          \ methods, it will only upload the resource in this case\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - in: "body"
        name: "RelatedParty"
        description: "Details of the Related Party\n"
        required: true
        schema:
          $ref: "#/definitions/RelatedPartyRef"
      security:
        - Bearer: []
      responses:
        200:
          description: "*OK* - The party is disassociated from customer successfully.\n"
          headers:
            Etag:
              type: "string"
              description: "entity tag\n"
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "*Unauthorized* - The server cannot apply the request because\
            \ it lacks valid authentication credentials for the target resource.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        503:
          description: "*Service Unavailable* - The server cannot fulfill the request\
            \ due to a temporary overloading or maintenance of the server. Retry later.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_removeRelatedParty"
  /customer/{customerId}/replacePrimaryRelatedParty:
    post:
      tags:
      - "Customer"
      summary: "Replace a primary party"
      description: "This operation has been deprecated and would be removed in future\
        \ from this API. This operation replaces the primary related party of the\
        \ customer by the given one. The previous relatedParty becomes the secondary.\
        \        \n"
      operationId: "replacePrimaryRelatedParty"
      consumes:
      - "application/json;charset=utf-8"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of the customer\n"
        required: true
        type: "string"
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - in: "body"
        name: "Individual"
        description: "Details of the Individual\n"
        required: true
        schema:
          $ref: "#/definitions/RelatedPartyRef"
      security:
        - Bearer: []
      responses:
        201:
          description: "*Update* - Primary relatedParty is updated successfully.\n"
          headers:
            Etag:
              type: "string"
              description: "entity tag\n"
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "*Unauthorized* - The server cannot apply the request because\
            \ it lacks valid authentication credentials for the target resource.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        503:
          description: "*Service Unavailable* - The server cannot fulfill the request\
            \ due to a temporary overloading or maintenance of the server. Retry later.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_replacePrimaryRelatedParty"
  /customer/{customerId}/relatedIndividual:
    get:
      tags:
      - "Customer"
      summary: "Retrieves the related parties associated to a customer"
      description: "This operation retrieves related individuals associated to a customer\
        \ through the  following entities&#58;\n- Customer (EngagedParty,relatedParty)\n\
        - Financial Account(relatedParty,Contact.relatedParty)\n- Billing Account\
        \ (relatedParty,Contact.relatedParty) \n- Payment Method (relatedParty)\n\n\
        **Mandatory&#58;**\n  - customerId  - unique identifier of the customer in\
        \ the path parameter\n\n**Optional Query Parameter &#58;**\n**includeFrom**\
        \ -  Refer the parameter section for more information\n \n**Business rules&#58;**\n\
        - This operation will iterate over customer, Financial Account, Billing Account,\
        \ Payment Method entities based on the qeury parameter **includeFrom**.\n\n\
        **Default behaviour&#58;**\n- If **includeFrom** query parameter is not provided,\
        \ then operation will return only the related individuals under the Customer.\n"
      operationId: "retrieveCustomerRelatedParty"
      parameters:
      - name: "customerId"
        in: "path"
        description: "The ID of the customer\n"
        required: true
        type: "string"
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "includeFrom"
        in: "query"
        description: "This is a parameter which specifies the entities from which\
          \ related parties are retrieved.\n- If not provided, only the related parties\
          \ under the customer are returned (default behavior).\n- If provided, the\
          \ data is retrieved based on the provided value. Multiple values can be\
          \ supplied for this parameter using the comma separator.\n\nThe following\
          \ values are supported:\n- *All* - Together with the customer entity related\
          \ individuals, returns the related individuals associated to payment method,\
          \ billing account and financial account\n- *BillingAccount* - Together with\
          \ the customer related individuals, returns the related individuals associated\
          \ to billing account\n- *FinancialAccount* - Together with the customer\
          \ related individuals, returns the related individuals associated to financal\
          \ account\n- *PaymentMethod* - Together with the customer related individuals,\
          \ returns the related individuals associated to payment method\n\nExample:\
          \ \n  1. *includeFrom = BillingAccount,FinancialAccount*\n  2. *includeFrom\
          \ = All*\n"
        required: false
        type: "string"
      security:
        - Bearer: []
      responses:
        200:
          description: "*OK* - The customer related parties were retrieved successfully.\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IndividualInvolvement"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_retrieveCustomer"
  /customer/{customerId}/postalAddress:
    get:
      tags:
      - "Customer"
      summary: "Retrieve postal addresses of customer"
      description: "This operation retrieves customer addresses based on the provided\
        \ filter values.\n\n**Filters &#58;**\n\n- addressType==<value>  -   Represents\
        \ role of address. Invoice,mailing,service,shipping are some of the example\
        \ values (GeographicAddressRefData addressRole).\n- type  == <value> - address\
        \ type such as Home/Work etc. ( Either type or role can be give at a time\
        \ )  \n- place.@referredType == <value>  - PlaceRef.@referredType to search\
        \ for within the customer\n- place.id == <value> - The value of PlaceRef.id\
        \ to search for within the customer\n- place.subPlace.id == <value> - The\
        \ value of SubPlaceRef.id to search for within the customer\n- place.subPlace.@referredType\
        \ == <value> - The value of SubPlaceRef.@referredType to search for within\
        \ the customer\n\n**Mandatory&#58;**\n- customerId  - unique identifier of\
        \ the customer         \n \n**Business rules&#58;**\n  - Operation will iterate\
        \ over customer entity in order to filter the postal addresses. The related\
        \ entities such as FA/BA are not traversed for filtering.\n  - The rules for\
        \ matching address type are driven by (GeographicAddressManagement&#58; GET\
        \ /addressRole)  reference data list. For example if 'Home' address is configured\
        \ to be allowed as 'Service' address then filter such as 'addressRole=Service'\
        \ would include the 'Home' address in response.\n    The address role reference\
        \ list contains the configuration information.\n  - Supports \"includeFrom\"\
        \ query parameter to pull the addresses from different entities. Refer \"\
        Parameters\" section for more info.\n  \n\n**Reference values&#58;**\nThe\
        \ reference values are located in configuration\nThe following list describes\
        \ attributes and the corresponding configuration parameters that contain the\
        \ valid values. The format is as follows&#58; \"&lt;attribute name&gt; (Configuration\
        \ &#58; &lt;configuration parameter&gt;)\" .\n- place.@referredType  (Configuration\
        \ &#58; allowedPlaceRefReferredType)\n- place.subPlace.@referredType(Configuration\
        \ &#58; allowedSubPlaceRefReferredType)\n\n**Default behaviour&#58;**\n- If\
        \ filter attributes are not provided then operation will return all the postal\
        \ addresses of the customer.\n"
      operationId: "retrieveCustomerAddress"
      parameters:
      - name: "customerId"
        in: "path"
        description: "The ID of the customer\n"
        required: true
        type: "string"
      - name: "filters"
        in: "query"
        description: "The filter sets criteria for retrieving a subset of resources\
          \ from a collection, using JSON Path syntax to express the conditions for\
          \ retrieval. Actual supported filter expressions and operators are detailed\
          \ in the API operation description.\n\nNotes&#58;\n- Attribute values that\
          \ represent a Date are expected in UTC format *yyyy-mm-ddThh&#58;mm&#58;ssZ*\n\
          - Attribute values and operators MUST be properly URL-encoded\n- Encrypted\
          \ attributes (if any) are supported with Equality (==) operator only\n"
        required: false
        type: "string"
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "includeFrom"
        in: "query"
        description: "This parameter specifies the entities from which postal addresses\
          \ to be retrieved.\n- The search always, even if this query param is not\
          \ sent, returns all the postal addresses under Customer and engagedParty.\
          \ This is the default behavior. The filter conditions are applied on top\
          \ of this criteria.\n- If this parameter is provided, the data is retrieved\
          \ based on the provided entity along with Customer and engagedParty. Multiple\
          \ values can be supplied for this parameter using the comma separator.\n\
          \nThe following values are supported:\n- *All* - Together with the customer\
          \ postal addresses, returns the addresses associated to owning individual/organization(future),\
          \ billing account and financial account.\n- *BillingAccount* - Together\
          \ with the customer postal addresses, returns the addresses associated to\
          \ billing account\n- *FinancialAccount* - Together with the customer postal\
          \ addresses, returns the addresses associated to financal account\n\nExample:\
          \ \n  1. *includeFrom = BillingAccount,FinancialAccount*\n  2. *includeFrom\
          \ = All* \n"
        required: false
        type: "string"
      security:
        - Bearer: []
      responses:
        200:
          description: "*OK* - The customer addresses were retrieved successfully.\n"
          headers:
            Etag:
              type: "string"
              description: "entity tag\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MediumCharacteristic"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_retrieveCustomer"
  /customer/{customerId}/addPostalAddress:
    post:
      tags:
      - "Customer"
      security:
        - Bearer: []
      summary: "Associate an address to customer"
      description: "This operation associates a postal address to customer with given\
        \ role. \n\n**Mandatory&#58;**\n- place.id\n- type\n\n**Business rules&#58;**\n\
        \n- The operation will validate the place.id, place.subplace.id\n\n- Operation\
        \ will support values for some of the attributes as below \n    place.@referredType='GeographicAddress'\n\
        \    place.subPlace.@referredType='GeographicSubAddress'\n\n- The operation\
        \ is idempotent and will result no change to customer resource in case the\
        \ address already exist on the customer with given type\n\n- The operation\
        \ will use the place.id and subplace.id for conversion from geographic address\
        \ to formatted address.\n\n**Reference value&#58;**\n  The reference values\
        \ are retrieved from the respective reference data API described against each\
        \ attribute. The following list describes example attributes and the corresponding\
        \ API that is used to retrieve valid values, The format is as follows &#58;\
        \ \"&lt;attribute name&gt;(Subdomain &#58; API)\"&#58;\n  - type(GeographicAddressManagement\
        \ &#58; GET /AddressRole)\n"
      operationId: "addPostalAddress"
      consumes:
      - "application/json;charset=utf-8"
      parameters:
      - name: "customerId"
        in: "path"
        description: "The ID of the customer\n"
        required: true
        type: "string"
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "The If-Match HTTP request header makes the request conditional.\
          \ \nFor GET and HEAD methods, the server will send back the requested resource\
          \ only if it matches one of the listed ETags. \nFor PUT and other non-safe\
          \ methods, it will only upload the resource in this case\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - in: "body"
        name: "Medium"
        description: "Details of the Customer with added contact medium\n"
        required: true
        schema:
          $ref: "#/definitions/MediumCharacteristic"
      responses:
        200:
          description: "*OK* - The address is associated with customer successfully.\n"
          headers:
            Etag:
              type: "string"
              description: "entity tag\n"
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "*Unauthorized* - The server cannot apply the request because\
            \ it lacks valid authentication credentials for the target resource.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        503:
          description: "*Service Unavailable* - The server cannot fulfill the request\
            \ due to a temporary overloading or maintenance of the server. Retry later.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_addPostalAddress"
  /customer/{customerId}/updateStatus:
    post:
      tags:
      - "Customer"
      security:
        - Bearer: []
      summary: "Update the status of a Customer"
      description: "This service enables updating the status of the customer.\n\n\
        **Mandatory&#58;**\n  - customerStatus.status\n"
      operationId: "updateStatus"
      consumes:
      - "application/json;charset=utf-8"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of the Customer\n"
        required: true
        type: "string"
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "\"The If-Match HTTP request header makes the request conditional.\
          \ \nFor GET and HEAD methods, the server will send back the requested resource\
          \ only if it matches one of the listed ETags.\nFor PUT and other non-safe\
          \ methods, it will only upload the resource\"\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel\n"
        required: false
        type: "string"
      - in: "body"
        name: "UpdateCustomerStatus"
        description: "Customer status for the customer\n"
        required: true
        schema:
          $ref: "#/definitions/UpdateCustomerStatus"
      responses:
        200:
          description: "*OK* - The Customer status is updated successfully.\n"
          headers:
            Etag:
              type: "string"
              description: "entity tag\n"
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        503:
          description: "*Service Unavailable* - The server cannot fulfill the request\
            \ due to a temporary overloading or maintenance of the server. Retry later.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_updateStatus"
  /customer/{customerId}/preference:
    get:
      tags:
      - "Customer"
      security:
        - Bearer: []
      summary: "Retrieve customer Preference"
      description: "This operation retrieves Customer Preference for a customer based\
        \ on the Customer ID provided for the operation.\n \n**Mandatory&#58;**\n\
        \  - customerId\n \n **Business rules&#58;**\n  <ul>\n  <li>Fields query parameter\
        \ required to be set for getting subset of the attributes in response.\n \
        \ <li> \"D1_PrivacyManagement_retrievePartyPrivacyProfiles\" role is required\
        \ to access privacy profile preference, privacy profile preference will be\
        \ excluded from response in absence of role to the user and a message will\
        \ be added to response. \n</ul>\n"
      operationId: "retrieveCustomerPreference"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], ?,\
          \ [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value ?none?, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "customerId"
        in: "path"
        description: "ID of the Customer\n"
        required: true
        type: "string"
      responses:
        200:
          description: "OK - customer preference retrieved"
          schema:
            $ref: "#/definitions/CustomerPreference"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getCustomerPreference"
  /customer/{id}/manageExternalIdentifier:
    post:
      tags:
      - "Customer"
      security:
        - Bearer: []
      summary: "Manage external identifiers in Customer"
      description: "This operation enables adding or removing an external system identifier\
        \ to the Customer.\n\n**Business rules&#58;** \n<ul>\n<li>The supported action\
        \ are <i>add</i> or <i>remove</i>\n<li>The ManageExternalIdentifier receives\
        \ its resource that contains the externalIdentifier fields on the Customer.\n\
        <li>externalIdentifier.id is mandatory\n<li>externalIdentifier.owner and externalIdentifier.externalIdentifierType\
        \ both cannot be left empty ? the consumer needs to populate either one or\
        \ the other (or both).\n</ul>\n"
      operationId: "manageExternalIdentifierForCustomerEntity"
      consumes:
      - "application/json;charset=utf-8"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "The If-Match HTTP request header makes the request conditional.\
          \ \nFor GET and HEAD methods, the server will send back the requested resource\
          \ only if it matches one of the listed ETags. \nFor PUT and other non-safe\
          \ methods, it will only upload the resource in this case\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        description: "ID of the Customer\n"
        required: true
        type: "string"
      - in: "body"
        name: "manageExternalIdentifier"
        description: "External identifier that can be added or removed from Customer\n"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/ManageExternalIdentifier"
          minItems: 1
      responses:
        200:
          description: "*OK* - The Customer was updated successfully with the ExternalIdentifier.\n"
          headers:
            Etag:
              type: "string"
              description: "entity tag\n"
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_updateExternalIdentifier"
  /customer/{customerId}/history:
    get:
      tags:
      - "Customer History"
      summary: "Retrieve Customer's history."
      description: "This service provides an ability to search/filter Customer history.\n\
        \n**Filter &#58;**\n- itemType\n- startDateTime ( operator >= ,<=)\n- endDateTime\
        \ ( operator >= ,<=)\nAll date-time filters are provided as a String with\
        \ RFC 3339 (ISO-8601). Supported format is\n- yyyy-MM-ddTHH&#58;mm&#58;ss.SSSZ\
        \ \nFor example, 2019-02-20T14&#58;09&#58;53.517Z\"\n"
      operationId: "listCustomerHistory"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of the Customer\n"
        required: true
        type: "string"
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "filters"
        in: "query"
        description: "The filter sets criteria for retrieving a subset of resources\
          \ from a collection, using JSON Path syntax to express the conditions for\
          \ retrieval. Actual supported filter expressions and operators are detailed\
          \ in the API operation description.\n\nNotes&#58;\n- Attribute values that\
          \ represent a Date are expected in UTC format *yyyy-mm-ddThh&#58;mm&#58;ssZ*\n\
          - Attribute values and operators MUST be properly URL-encoded\n- Encrypted\
          \ attributes (if any) are supported with Equality (==) operator only\n"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response\
          \ requested by client\n"
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response requested\
          \ by client\n"
        required: false
        type: "integer"
        format: "int32"
      - name: "X-Total-Count"
        in: "header"
        description: "Total number of records present in the system.\n"
        required: false
        type: "integer"
      security:
        - Bearer: []
      responses:
        "200":
          description: "HistoryItem"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HistoryItem"
        "400":
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        "405":
          description: "*Method Not Allowed* - The server rejected the request because\
            \ the HTTP method used by the resource is not supported by that resource.\n"
          schema:
            $ref: "#/definitions/Error"
        "409":
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        "502":
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        "503":
          description: "*Service Unavailable* - The server cannot fulfill the request\
            \ due to a temporary overloading or maintenance of the server. Retry later.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getHistory"
  /creditProfile:
    get:
      tags:
      - "CreditProfile"
      security:
        - Bearer: []
      summary: "Search credit profiles"
      description: "This operation to enables retrieving or searching the Credit Profiles\
        \ based on the filter criteria.\n\n**Filter &#58;**\nSupported filters and\
        \ filter operations using ?filters? directive are&#58;\n- relatedPartyRole.role\n\
        - relatedPartyRole.id\n\n*Mandatory*\n  - The filter - __relatedPartyRole.role__\
        \ and __relatedPartyRole.id__ are mandatory.\n\nSorting is supported based\
        \ on following attributes&#58;\n - status\n - creditProfileDate\n - lastUpdate\n"
      operationId: "retrieveCreditProfiles"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        description: "This parameter has been deprecated, use filters instead\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "filters"
        in: "query"
        description: "The filter sets criteria for retrieving a subset of resources\
          \ from a collection, using JSON Path syntax to express the conditions for\
          \ retrieval. Actual supported filter expressions and operators are detailed\
          \ in the API operation description.\n\nNotes&#58;\n- Attribute values that\
          \ represent a Date are expected in UTC format *yyyy-mm-ddThh&#58;mm&#58;ssZ*\n\
          - Attribute values and operators MUST be properly URL-encoded\n- Encrypted\
          \ attributes (if any) are supported with Equality (==) operator only\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], ?,\
          \ [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value ?none?, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "*OK* - Credit Profile Retrieval Successful.\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditProfile"
            minItems: 0
        206:
          description: "*OK* - Credit Profile Retrieval Successful. Partial result.\
            \ \n"
          headers:
            Content-Range:
              type: "string"
              description: "The HTTP response header indicates where in a full body\
                \ message a partial message belongs.\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditProfile"
            minItems: 1
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_retrieveCreditProfiles"
    post:
      tags:
      - "CreditProfile"
      security:
        - Bearer: []
      summary: "Creates a credit profile"
      description: "This operation enables creation of the Credit Profile for the\
        \ party role using the Party Credit Rating retrived from external sources.\
        \ The operation requires the Party Role as mandatory input.\n\n**Mandatory&#58;**\n\
        \  - partyRole\n\n**Readonly&#58;**\n- characteristic\n- relatedParty\n\n\
        **Business Rules&#58;**        \nFollowing validations are performed before\
        \ creating the Credit profile. If any of these validations fail, the API will\
        \ return error.\n* __Characteristic Duplication Validation__ - The characteristics\
        \ with same name should not exist\n* __Reference Data Validations__ - the\
        \ values of the reference data attributes should be valid\n* __Referenced\
        \ Entities existance Validations__ - Referenced entity existance validation\
        \ for related party role and the credit inquiry.\n* __Privilege User Validations__\
        \ - User should have **D1_CustomerManagement_overrideCreditRating** role to\
        \ override CreditRating and CreditInquiry.\n\n**Reference value&#58;**\n \
        \ The reference values are retrieved from the respective reference data API\
        \ described against each attribute. The following list describes example attributes\
        \ and the corresponding API that is used to retrieve valid values, The format\
        \ is as follows &#58; \"&lt;attribute name&gt;(Subdomain &#58; API)\"&#58;\n\
        \  - Status (CustomerManagement &#58; GET /creditProfileStatus)\n  - Characteristic.name\
        \ (CustomerManagement &#58; GET /creditProfileCharacteristicName)\n  - Characteristic.valueType\
        \ - (CustomerManagement &#58; GET /creditProfileCharacteristicValueType)\n\
        \  - Characteristic.category - (CustomerManagement &#58; GET /creditProfileCharacteristicCategory)\n\
        \  - CreditRating.ratingAgencyName - (CustomerManagement &#58; GET /creditRatingAgencyName)\n\
        \  - CreditRating.ratingAgencyType - (CustomerManagement &#58; GET /creditRatingAgencyType)\n\
        ### Logical Role - CreateCreditProfile\n"
      operationId: "createCreditProfile"
      consumes:
      - "application/json;charset=utf-8"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "forceCreditInquiry"
        in: "query"
        description: "Parameter to enforce the credit inquiry when evaluating the\
          \ credit profile.\n"
        required: false
        type: "boolean"
      - in: "body"
        name: "creditProfile"
        description: "This is an input for creating a Credit Profile.\n"
        required: true
        schema:
          $ref: "#/definitions/CreditProfile"
      responses:
        201:
          description: "*Created* - credit profile created successfully.\n"
          headers:
            Etag:
              type: "string"
              description: "The HTTP response header as an identifier for a specific\
                \ version of a resource.\n"
          schema:
            $ref: "#/definitions/CreditProfile"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        429:
          description: "*Too Many Requests* - The request could not be completed due\
            \ to duplicate request within the specific amount of time.\n"
          headers:
            Retry-After:
              type: "string"
              description: "The response HTTP header to indicate how long the user\
                \ agent should wait before making a follow-up request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_createCreditProfile"
  /creditProfile/{creditProfileId}:
    get:
      tags:
      - "CreditProfile"
      security:
        - Bearer: []
      summary: "Retrieves a credit profile"
      description: "This operation enables to retrieve the details of the credit profile\
        \ by using the id.\n\n#### Logical Role - RetrieveCreditProfileById\n"
      operationId: "retrieveCreditProfile"
      parameters:
      - name: "creditProfileId"
        in: "path"
        description: "Credit profile id\n"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], ?,\
          \ [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value ?none?, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "*OK* - Retrieval Successful.\n"
          headers:
            Etag:
              type: "string"
              description: "The HTTP response header as an identifier for a specific\
                \ version of a resource.\n"
          schema:
            $ref: "#/definitions/CreditProfile"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_retrieveCreditProfile"
  /creditProfile/{creditProfileId}/override:
    post:
      tags:
      - "CreditProfile"
      security:
        - Bearer: []
      summary: "Override values of credit profile"
      description: "This operation enables overriding the values of the credit profile\
        \ characteristics. The override history will be internally created when this\
        \ operation is performed.\n\n#### Logical Role - OverrideCreditProfile\n"
      operationId: "overrideCreditProfile"
      consumes:
      - "application/json;charset=utf-8"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "creditProfileId"
        in: "path"
        description: "The ID of the Credit Profile\n"
        required: true
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "The If-Match HTTP request header makes the request conditional.\
          \ \nFor GET and HEAD methods, the server will send back the requested resource\
          \ only if it matches one of the listed ETags. \nFor PUT and other non-safe\
          \ methods, it will only upload the resource in this case\n"
        required: false
        type: "string"
      - in: "body"
        name: "overrideCreditProfileCharacteristic"
        description: "Request to override the Credit Profile Characteristics.\n"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/OverrideRecord"
          minItems: 1
      responses:
        200:
          description: "*OK* - Party Privacy Profile overriden Successfully.\n"
          headers:
            Etag:
              type: "string"
              description: "The HTTP response header as an identifier for a specific\
                \ version of a resource.\n"
          schema:
            $ref: "#/definitions/CreditProfile"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "*Precondition Failed* - Indicates that the precondition given\
            \ in one or more of the request-header fields evaluated to false when\
            \ it was tested on the server.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_overrideCreditProfile"
  /creditProfile/{creditProfileId}/overrideHistory:
    get:
      tags:
      - "CreditProfileOverrideHistory"
      security:
        - Bearer: []
      summary: "Retrieve Credit Profile override history"
      description: "This operation enables retrieving the history of overrides for\
        \ the Credit Profile. The API supports specifying the characteristic id to\
        \ retrieve the history of overrides for that characteristic only. If not specified\
        \ then the override history of all the characteristic is retrieved.\n\nThe\
        \ default sorting will be based on the __Characteristic id__ and __activity\
        \ date__.\n\n#### Logical Role - RetrieveCreditProfileOverrideHistory\n"
      operationId: "retrieveCreditProfileOverrideHistory"
      parameters:
      - name: "creditProfileId"
        in: "path"
        description: "The ID of the Credit Profile\n"
        required: true
        type: "string"
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "characteristicId"
        in: "query"
        description: "The identifier of the profile characteristic.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], ?,\
          \ [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value ?none?, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "*OK* - Credit Profile History Retrieval Successful.\n"
          schema:
            $ref: "#/definitions/OverrideHistory"
        206:
          description: "*OK* - Credit Profile History Retrieval Successful. Partial\
            \ result. \n"
          headers:
            Content-Range:
              type: "string"
              description: "The HTTP response header indicates where in a full body\
                \ message a partial message belongs.\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OverrideHistory"
            minItems: 1
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_retrieveCreditProfile"
  /creditProfile/{creditProfileId}/updatePartyPrivacyProfile:
    post:
      tags:
      - "CreditProfile"
      security:
        - Bearer: []
      summary: "Associate/update privacy profile to a creadit profile"
      description: "This operation enables associating the privacy profile to represent\
        \ the consent provided by the party for performing the credit inquiry.\n"
      operationId: "updatePartyPrivacyProfile"
      consumes:
      - "application/json;charset=utf-8"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "creditProfileId"
        in: "path"
        description: "The ID of the Credit Profile\n"
        required: true
        type: "string"
      - name: "If-Match"
        in: "header"
        description: "The If-Match HTTP request header makes the request conditional.\
          \ \nFor GET and HEAD methods, the server will send back the requested resource\
          \ only if it matches one of the listed ETags. \nFor PUT and other non-safe\
          \ methods, it will only upload the resource in this case\n"
        required: false
        type: "string"
      - in: "body"
        name: "partyPrivacyProfile"
        description: "Party privacy profile to be associated to the credit profile.\n"
        required: true
        schema:
          $ref: "#/definitions/PartyPrivacyProfileRef"
      responses:
        200:
          description: "*OK* - Credit Profile updated successfully.\n"
          headers:
            Etag:
              type: "string"
              description: "The HTTP response header as an identifier for a specific\
                \ version of a resource.\n"
          schema:
            $ref: "#/definitions/CreditProfile"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "*Precondition Failed* - Indicates that the precondition given\
            \ in one or more of the request-header fields evaluated to false when\
            \ it was tested on the server.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_updatePartyPrivacyProfile"
  /customerType:
    get:
      tags:
      - "customerType"
      summary: "Retrieves Customer Type reference data."
      description: "This operation enables retrieving the customer type(s) along with\
        \ the subtypes.It also supports filtering the list of values using the supported\
        \ query parameters. By default the sub types for the matching customer type\
        \ are returned.\n"
      operationId: "retrieveCustomerTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "customerType"
        in: "query"
        description: "Customer Type Value\n"
        required: false
        type: "string"
      security:
        - Bearer: []
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerType"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /customerType/{customerType}/customerSubType:
    get:
      tags:
      - "customerSubType"
      security:
        - Bearer: []
      summary: "Retrieves Customer SubType reference data."
      description: "This operation enables retrieving the customer sub type(s) and\
        \ the corresponding customer type. It also supports filtering the list of\
        \ values using the supported query parameters.\n"
      operationId: "retrieveCustomerSubTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "customerType"
        in: "path"
        description: "Customer Type\n"
        required: true
        type: "string"
      - name: "customerSubType"
        in: "query"
        description: "CustomerSub Type Value\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerSubType"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /customerEngagedPartyType:
    get:
      tags:
      - "customerEngagedPartyType"
      security:
        - Bearer: []
      summary: "Retrieves Customer Engaged Party Type reference data."
      description: "This operation enables retrieving the list of engaged party types.\
        \ It also supports filtering the list of values using the supported query\
        \ parameters.\n"
      operationId: "retrieveCustomerEngagedPartyTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], ?,\
          \ [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value ?none?, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "customerEngagedPartyType"
        in: "query"
        description: "Party Type value.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerEngagedPartyType"
        304:
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        400:
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /accountReferredType:
    get:
      tags:
      - "accountReferredType"
      security:
        - Bearer: []
      summary: "Retrieves accountReferredType reference data"
      description: "This operation enables retrieving the account type(s). The list\
        \ can be filtered using the supported query parameters and the level of details\
        \ to be returned can be specified using the _fields_ query parameter.\n"
      operationId: "retrieveAccountReferredTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "accountReferredType"
        in: "query"
        description: "Values of the Account Type\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AccountReferredType"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /accountType:
    get:
      tags:
      - "accountType"
      security:
        - Bearer: []
      summary: "Retrieves account Type reference data."
      description: "This operation enables retrieving the account type(s). The list\
        \ can be filtered using the supported query parameters and the level of details\
        \ to be returned can be specified using the _fields_ query parameter.\n"
      operationId: "retrieveAccountTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], ?,\
          \ [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value ?none?, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "accountType"
        in: "query"
        description: "Value of the Account Type\n"
        required: false
        type: "string"
      responses:
        200:
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AccountType"
        304:
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        400:
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /customerStatus:
    get:
      tags:
      - "customerStatus"
      security:
        - Bearer: []
      summary: "Retrieves Customer Status reference data."
      description: "This operation enables retrieving the customer status(s) and the\
        \ corresponding transition. The list can be filtered using the supported query\
        \ parameters and the level of details to be returned can be specified using\
        \ the _fields_ query parameter.\n"
      operationId: "retrieveCustomerStatuses"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "customerStatus"
        in: "query"
        description: "Value of the Customer Status\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerStatus"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /customerContactMediumType:
    get:
      tags:
      - "customerContactMediumType"
      security:
        - Bearer: []
      summary: "Retrieves CustomerContactMediumTypes reference data."
      description: "This operation enables retrieving the contact medium type(s).\
        \ It also supports filtering the list of values using the supported query\
        \ parameters.\n"
      operationId: "retrieveCustomerContactMediumTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], ?,\
          \ [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value ?none?, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "customerContactMediumType"
        in: "query"
        description: "Value of the Contact Medium Type.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerContactMediumType"
        304:
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        400:
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /customerContactMediumType/{customerContactMediumType}/mediumType:
    get:
      tags:
      - "customerContactMediumType"
      security:
        - Bearer: []
      summary: "Retrieves MediumTypes reference data."
      description: "This operation enables retrieving the medium type(s). It also\
        \ supports filtering the list of values using the supported query parameters.\n"
      operationId: "retrieveMediumTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], ?,\
          \ [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value ?none?, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "customerContactMediumType"
        in: "path"
        description: "Contact Medium Type\n"
        required: true
        type: "string"
      - name: "mediumType"
        in: "query"
        description: "Value of the Medium Type\n"
        required: false
        type: "string"
      responses:
        200:
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MediumType"
        304:
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        400:
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /customerEngagedPartyReferredType:
    get:
      tags:
      - "customerEngagedPartyReferredType"
      security:
        - Bearer: []
      summary: "Retrieves CustomerEngagedPartyReferredTypes reference data."
      description: "This operation enables retrieving the values for the types of\
        \ engaged party for the customer. It also supports filtering the list of values\
        \ using the supported query parameters.\n"
      operationId: "retrieveCustomerEngagedPartyReferredTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "customerEngagedPartyReferredType"
        in: "query"
        description: "Value of the Related Party Type\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerEngagedPartyReferredType"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /customerRelatedPartyReferredType:
    get:
      tags:
      - "customerRelatedPartyReferredType"
      security:
        - Bearer: []
      summary: "Retrieves CustomerRelatedPartyReferredTypes reference data."
      description: "This operation enables retrieving the values of the type of party\
        \ that can be related to the customer. The list can be filtered using the\
        \ supported query parameters and the level of details to be returned can be\
        \ specified using the _fields_ query parameter.\n"
      operationId: "retrieveCustomerRelatedPartyReferredTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "customerRelatedPartyReferredType"
        in: "query"
        description: "Value of the Related Party Type\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerRelatedPartyReferredType"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /customerRelatedPartyType:
    get:
      tags:
      - "customerRelatedPartyType"
      security:
        - Bearer: []
      summary: "Retrieves CustomerRelatedPartyTypes reference data."
      description: "This operation enables retrieving the values of the type of party\
        \ that can be related to the customer. The list can be filtered using the\
        \ supported query parameters and the level of details to be returned can be\
        \ specified using the _fields_ query parameter.\n"
      operationId: "retrieveCustomerRelatedPartyTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "customerRelatedPartyType"
        in: "query"
        description: "Value of the Related Party Type\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerRelatedPartyType"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /customerRelatedPartyReferredType/{customerRelatedPartyReferredType}/customerRelatedPartyReferredTypeRole:
    get:
      tags:
      - "customerRelatedPartyReferredType"
      security:
        - Bearer: []
      summary: "Retrieves CustomerRelatedPartyRoles reference data."
      description: "This operation enables retrieving the roles of the related party\
        \ of customer. The list can be filtered using the supported query parameters\
        \ and the level of details to be returned can be specified using the _fields_\
        \ query parameter.\n"
      operationId: "retrieveCustomerRelatedPartyRoles"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "customerRelatedPartyReferredType"
        in: "path"
        description: "Related Party Referred Type\n"
        required: true
        type: "string"
      - name: "customerRelatedPartyReferredTypeRole"
        in: "query"
        description: "Value of the Related Party Role\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerRelatedPartyReferredTypeRole"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditProfileCharacteristicName:
    get:
      tags:
      - "creditProfileCharacteristicName"
      security:
        - Bearer: []
      summary: "Retrieves CreditProfileCharacteristicNames reference data."
      description: "This operation enables retrieving the list of the names of characteristics\
        \ defined on the Credit Profile. The list can be filtered using the supported\
        \ query parameters and the level of details to be returned can be specified\
        \ using the _fields_ query parameter.\n"
      operationId: "retrieveCreditProfileCharacteristicNames"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditProfileCharacteristicName"
        in: "query"
        description: "Name of the characteristic used as filter criteria.\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditProfileCharacteristicName"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /characteristicValueType:
    get:
      tags:
      - "characteristicValueType"
      security:
        - Bearer: []
      summary: "Retrieves CharacteristicValueTypes reference data."
      description: "This operation enables retrieving the list of type of values that\
        \ the characteristics support. The list can be filtered using the supported\
        \ query parameters and the level of details to be returned can be specified\
        \ using the _fields_ query parameter.\n"
      operationId: "retrieveCharacteristicValueTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "characteristicValueType"
        in: "query"
        description: "Value type of the characteristic used as filter criteria\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CharacteristicValueType"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditProfileRelatedPartyReferredType:
    get:
      tags:
      - "creditProfileRelatedPartyReferredType"
      security:
        - Bearer: []
      summary: "Retrieves CreditProfileRelatedPartyReferredTypes reference data."
      description: "This operation enables retrieving the list of types related party\
        \ of the Credit Profile. The list can be filtered using the supported query\
        \ parameters and the level of details to be returned can be specified using\
        \ the _fields_ query parameter.\n"
      operationId: "retrieveCreditProfileRelatedPartyReferredTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditProfileRelatedPartyReferredType"
        in: "query"
        description: "Value of the Related Party Type\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditProfileRelatedPartyReferredType"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditProfileRelatedPartyReferredType/{creditProfileRelatedPartyReferredType}/creditProfileRelatedPartyReferredTypeRole:
    get:
      tags:
      - "creditProfileRelatedPartyRole"
      security:
        - Bearer: []
      summary: "Retrieves CreditProfileRelatedPartyRoles reference data."
      description: "This operation enables retrieving the list of roles which the\
        \ related party of the Credit Profile plays. The list can be filtered using\
        \ the supported query parameters and the level of details to be returned can\
        \ be specified using the _fields_ query parameter.\n"
      operationId: "retrieveCreditProfileRelatedPartyRoles"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditProfileRelatedPartyReferredType"
        in: "path"
        description: "Related Party Referred Type\n"
        required: true
        type: "string"
      - name: "creditProfileRelatedPartyReferredTypeRole"
        in: "query"
        description: "Value of the Related Party Role\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditProfileRelatedPartyReferredTypeRole"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditProfileRelatedPartyRoleReferredType:
    get:
      tags:
      - "creditProfileRelatedPartyRoleReferredType"
      security:
        - Bearer: []
      summary: "Retrieves CreditProfileRelatedPartyRoleReferredTypes reference data."
      description: "This operation enables retrieving the list of types related party\
        \ roles of the Credit Profile. The list can be filtered using the supported\
        \ query parameters and the level of details to be returned can be specified\
        \ using the _fields_ query parameter.\n"
      operationId: "retrieveCreditProfileRelatedPartyRoleReferredTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditProfileRelatedPartyRoleReferredType"
        in: "query"
        description: "The type of the related party role.\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditProfileRelatedPartyRoleReferredType"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  ? /creditProfileRelatedPartyRoleReferredType/{creditProfileRelatedPartyRoleReferredType}/creditProfileRelatedPartyRoleReferredTypeRole
  : get:
      tags:
      - "creditProfileRelatedPartyRoleRole"
      security:
        - Bearer: []
      summary: "Retrieves CreditProfileRelatedPartyRoleRoles reference data."
      description: "This operation enables retrieving the list of roles which the\
        \ related party role ofthe Credit Profile plays. The list can be filtered\
        \ using the supported query parameters and the level of details to be returned\
        \ can be specified using the _fields_ query parameter.\n"
      operationId: "retrieveCreditProfileRelatedPartyRoleRoles"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], ?,\
          \ [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value ?none?, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditProfileRelatedPartyRoleReferredType"
        in: "path"
        description: "Related Party Role referred type\n"
        required: true
        type: "string"
      - name: "creditProfileRelatedPartyRoleReferredTypeRole"
        in: "query"
        description: "Role of the related party role\n"
        required: false
        type: "string"
      responses:
        200:
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditProfileRelatedPartyRoleReferredTypeRole"
        304:
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        400:
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditProfileCharacteristicCategory:
    get:
      tags:
      - "creditProfileCharacteristicCategory"
      security:
        - Bearer: []
      summary: "Retrieves CreditProfileCharacteristicCategories reference data."
      description: "This operation enables retrieving the list of categories of the\
        \ characteristics. The list can be filtered using the supported query parameters\
        \ and the level of details to be returned can be specified using the _fields_\
        \ query parameter.\n"
      operationId: "retrieveCreditProfileCharacteristicCategories"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditProfileCharacteristicCategory"
        in: "query"
        description: "Category of the characteristic\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditProfileCharacteristicCategory"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditProfileOverrideReason:
    get:
      tags:
      - "creditProfileOverrideReason"
      security:
        - Bearer: []
      summary: "Retrieves CreditProfileOverrideReasons reference data."
      description: "This operation enables retrieving the list of available reasons\
        \ for overriding the profile. The list can be filtered using the supported\
        \ query parameters and the level of details to be returned can be specified\
        \ using the _fields_ query parameter.\n"
      operationId: "retrieveCreditProfileOverrideReasons"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditProfileOverrideReason"
        in: "query"
        description: "Reason code for override.\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditProfileOverrideReason"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditProfileOverrideRelatedPartyRoleReferredType:
    get:
      tags:
      - "creditProfileOverrideRelatedPartyRoleReferredType"
      security:
        - Bearer: []
      summary: "Retrieves OverrideRelatedPartyRoleReferredTypes reference data."
      description: "This operation enables retrieving the list of the types of Party\
        \ Roles allowed to override the profile. The list can be filtered using the\
        \ supported query parameters and the level of details to be returned can be\
        \ specified using the _fields_ query parameter.\n"
      operationId: "retrieveOverrideRelatedPartyRoleReferredTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditProfileOverrideRelatedPartyRoleReferredType"
        in: "query"
        description: "Type of the related party role\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditProfileOverrideRelatedPartyRoleReferredType"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  ? /creditProfileOverrideRelatedPartyRoleReferredType/{creditProfileOverrideRelatedPartyRoleReferredType}/creditProfileOverrideRelatedPartyRoleReferredTypeRole
  : get:
      tags:
      - "creditProfileOverrideRelatedPartyRole"
      security:
        - Bearer: []
      summary: "Retrieves OverrideRelatedPartyRoles reference data."
      description: "This operation enables retrieving the list of the types of Party\
        \ Roles allowed to override the profile. The list can be filtered using the\
        \ supported query parameters and the level of details to be returned can be\
        \ specified using the _fields_ query parameter.\n"
      operationId: "retrieveOverrideRelatedPartyRoles"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditProfileOverrideRelatedPartyRoleReferredType"
        in: "path"
        description: "Related Party Role referred type\n"
        required: true
        type: "string"
      - name: "creditProfileOverrideRelatedPartyRoleReferredTypeRole"
        in: "query"
        description: "Role of the related party role\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditProfileOverrideRelatedPartyRoleReferredTypeRole"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /customerPaymentMethodType:
    get:
      tags:
      - "customerPaymentMethod"
      security:
        - Bearer: []
      summary: "Retrieves CustomerPaymentMethodTypes reference data."
      description: "This operation enables retrieving the customer's payment method\
        \ types. The list can be filtered using the supported query parameters and\
        \ the level of details to be returned can be specified using the _fields_\
        \ query parameter.\n"
      operationId: "retrieveCustomerPaymentMethodTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "customerPaymentMethodType"
        in: "query"
        description: "Value of the Payment Method Type\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerPaymentMethodType"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /customerPaymentMethodReferredType:
    get:
      tags:
      - "customerPaymentMethod"
      security:
        - Bearer: []
      summary: "Retrieves CustomerPaymentMethodReferredTypes reference data."
      description: "This operation enables retrieving the customer's payment method\
        \ types. The list can be filtered using the supported query parameters and\
        \ the level of details to be returned can be specified using the _fields_\
        \ query parameter.\n"
      operationId: "retrieveCustomerPaymentMethodReferredTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], ?,\
          \ [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value ?none?, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "customerPaymentMethodReferredType"
        in: "query"
        description: "Value of the Payment Method Type\n"
        required: false
        type: "string"
      responses:
        200:
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerPaymentMethodReferredType"
        304:
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        400:
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditProfileStatus:
    get:
      tags:
      - "creditProfileStatus"
      security:
        - Bearer: []
      summary: "Retrieves CreditProfileStatuses reference data."
      description: "This operation enables retrieving the credit profile status(s)\
        \ and the corresponding transition. The list can be filtered using the supported\
        \ query parameters and the level of details to be returned can be specified\
        \ using the _fields_ query parameter.\n"
      operationId: "retrieveCreditProfileStatuses"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "creditProfileStatus"
        in: "query"
        description: "Credit Profile Status\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditProfileStatus"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditRatingAgencyName:
    get:
      tags:
      - "creditRatingAgencyName"
      security:
        - Bearer: []
      summary: "Retrieves CreditRatingAgencyNames reference data."
      description: "This operation allows retrieving the list of the names of credit\
        \ rating agenecies. The list can be filtered using the supported query parameters\
        \ and the level of details to be returned can be specified using the _fields_\
        \ query parameter.\n"
      operationId: "retrieveCreditRatingAgencyNames"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditRatingAgencyName"
        in: "query"
        description: "Name of the Credit Rating Agency\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditRatingAgencyName"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditRatingAgencyType:
    get:
      tags:
      - "creditRatingAgencyType"
      security:
        - Bearer: []
      summary: "Retrieves CreditRatingAgencyTypes reference data."
      description: "This operation allows retrieving the list of the types of credit\
        \ rating agenecies. The list can be filtered using the supported query parameters\
        \ and the level of details to be returned can be specified using the _fields_\
        \ query parameter.\n"
      operationId: "retrieveCreditRatingAgencyTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], ?,\
          \ [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value ?none?, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditRatingAgencyType"
        in: "query"
        description: "Credit Rating Agency Type\n"
        required: false
        type: "string"
      responses:
        200:
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditRatingAgencyType"
        304:
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        400:
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditRatingCharacteristicName:
    get:
      tags:
      - "creditRatingCharacteristicName"
      security:
        - Bearer: []
      summary: "Retrieves CreditRatingCharacteristicNames reference data."
      description: "This operation allows retrieving the list of the names of characteristics\
        \ defined on the Credit Rating. The list can be filtered using the supported\
        \ query parameters and the level of details to be returned can be specified\
        \ using the _fields_ query parameter.\n"
      operationId: "retrieveCreditRatingCharacteristicNames"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditRatingCharacteristicName"
        in: "query"
        description: "Name of the characteristic used as filter criteria\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditRatingCharacteristicName"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditInquiryStatus:
    get:
      tags:
      - "creditInquiryStatus"
      security:
        - Bearer: []
      summary: "Retrieves CreditInquiryStatuses reference data."
      description: "This operation enables retrieving the credit inquiry status(s)\
        \ and the corresponding transition. The list can be filtered using the supported\
        \ query parameters and the level of details to be returned can be specified\
        \ using the _fields_ query parameter.\n"
      operationId: "retrieveCreditInquiryStatuses"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditInquiryStatus"
        in: "query"
        description: "Credit Inquiry Status\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditInquiryStatus"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditInquiryEngagedPartyReferredType:
    get:
      tags:
      - "creditInquiryEngagedPartyReferredType"
      security:
        - Bearer: []
      summary: "Retrieves CreditInquiryEngagedPartyReferredTypes reference data."
      description: "This operation enables retrieving the list of types related party\
        \ roles of the Credit Profile. The list can be filtered using the supported\
        \ query parameters and the level of details to be returned can be specified\
        \ using the _fields_ query parameter.\n"
      operationId: "retrieveCreditInquiryEngagedPartyReferredTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], ?,\
          \ [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value ?none?, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "creditInquiryEngagedPartyReferredType"
        in: "query"
        description: "Related Party Type Value\n"
        required: false
        type: "string"
      responses:
        200:
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditInquiryEngagedPartyReferredType"
        304:
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        400:
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditInquiryRelatedPartyReferredType:
    get:
      tags:
      - "creditInquiryRelatedPartyReferredType"
      security:
        - Bearer: []
      summary: "Retrieves CreditInquiryRelatedPartyReferredTypes reference data."
      description: "This operation enables retrieving the list of types related party\
        \ roles of the Credit Profile. The list can be filtered using the supported\
        \ query parameters and the level of details to be returned can be specified\
        \ using the _fields_ query parameter.\n"
      operationId: "retrieveCreditInquiryRelatedPartyReferredTypes"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditInquiryRelatedPartyReferredType"
        in: "query"
        description: "Value of the Related Party Type\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditInquiryRelatedPartyReferredType"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /creditInquiryRelatedPartyReferredType/{creditInquiryRelatedPartyReferredType}/creditInquiryRelatedPartyReferredTypeRole:
    get:
      tags:
      - "creditInquiryRelatedPartyReferredType"
      security:
        - Bearer: []
      summary: "Retrieves CreditInquiryRelatedPartyRoles reference data."
      description: "This operation enables retrieving the list of related party roles\
        \ . The list can be filtered using the supported query parameters and the\
        \ level of details to be returned can be specified using the _fields_ query\
        \ parameter.\n"
      operationId: "retrieveCreditInquiryRelatedPartyRoles"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "creditInquiryRelatedPartyReferredType"
        in: "path"
        description: "Related Party Referred Type\n"
        required: true
        type: "string"
      - name: "creditInquiryRelatedPartyReferredTypeRole"
        in: "query"
        description: "Value of the Related Party Role\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval Successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CreditInquiryRelatedPartyReferredTypeRole"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - Indicates that client has sent malformed request.\n\
            Possibly missing mandatory query parameters, invalid value\nin query parameters,\
            \ validation exception etc.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /customer/generateID:
    post:
      tags:
      - "Customer"
      security:
        - Bearer: []
      summary: "Generate List of ID for Customer for migration"
      description: "This operation enables generating List of ID for Customer for\
        \ migration. \n\n**Business rules&#58;**         \nThe operation has only\
        \ one parameter limit. Default value is 1 and Max value is defined in configuration(Configuration\
        \ &#58; maxMigrationLimit). Input limit should be between these two values.\n"
      operationId: "generateIDForCustomer"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response requested\
          \ by client\n"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "*OK* - The Customer ID was successfully with generated.\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EntityRef"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_generateID"
  /creditProfile/generateID:
    post:
      tags:
      - "CreditProfile"
      security:
        - Bearer: []
      summary: "Generate List of ID for Credit Profile for migration"
      description: "This operation enables generating List of ID for Credit Profile\
        \ for migration.\n\n**Business rules&#58;**         \nThe operation has only\
        \ one parameter limit. Default value is 1 and Max value is defined in configuration(Configuration\
        \ &#58; maxMigrationLimit). Input limit should be between these two values.\
        \        \n"
      operationId: "generateIDForCreditProfile"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response requested\
          \ by client\n"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "*OK* - The Credit Profile ID was successfully with generated.\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EntityRef"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_generateID"
  /referenceDataList/{listName}:
    get:
      tags:
      - "GenericReferenceData"
      security:
        - Bearer: []
      summary: "Retrieves multi level reference data list"
      description: "This operation provides generic capability of retrieving multi\
        \ level simple reference data list.\n\n**Sort &#58;**\nThe operation support\
        \ sorting based on any reference data attribute. The sorting will be applied\
        \ on all levels based on same attributes.\n\n**Filter &#58;**\nThe filter\
        \ operationn is supported for all levels of reference data and should be provided\
        \ as per Generic ReferencedataList resource in following way..\n  ?filters=([name][operator][value])&([referenceDataList.name][operator][value]...)\n\
        \  \nContext query parameter provides the capability to additionally apply\
        \ filter based on context attributes. Valid values are based on table data\
        \ in C1 generic element.        \n\nReference data list supported&#58;\n-\
        \ ContactMediumType\n- EmailMediumType\n- TelephoneMediumType\n- PostalAddressMediumType(AddressRole)\n\
        - SocialMediumType\n- CreditProfileRelatedCreditPartyType\n"
      operationId: "retrieveReferenceDataList"
      parameters:
      - name: "listName"
        in: "path"
        description: "Generic ReferenceData listName parameter\n"
        required: true
        type: "string"
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "If-Modified-Since"
        in: "header"
        description: "Cache control\n"
        required: false
        type: "string"
      - name: "context"
        in: "query"
        description: "Context for the operation.\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "(Future) This parameter specifies the fields to be retrieved\
          \ in response to a request from the client&#58;\nThe list of resource attributes\
          \ must be comma-separated.\nNested resource attributes can be specified\
          \ using the dot notation, as follows&#58;\n[parentresource].[childresource].[attributeName]\n\
          A subselector can be specified to request a subset of nested resource attributes\
          \ for arrays or objects, as follows&#58;\n[resource]([attributeName], …\
          , [attributeName])\nA wildcard can be specified to request all attributes\
          \ of nested resources, as follows&#58;\n[resource]/*\nIf fields is specified\
          \ with reserved value “none”, then no fields (excluding *id* and *href*\
          \ attributes) will be returned.\nIf fields is not specified, then the complete\
          \ resource representation (with all the attributes) will be returned.\n\n\
          \  **Note &#58;** Only JSONPath is supported for API with Array Response.\n"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        description: "The filter sets criteria for retrieving a subset of resources\
          \ from a collection, using JSON Path syntax to express the conditions for\
          \ retrieval. Actual supported filter expressions and operators are detailed\
          \ in the API operation description.\n\nNotes&#58;\n- Attribute values that\
          \ represent a Date are expected in UTC format *yyyy-mm-ddThh&#58;mm&#58;ssZ*\n\
          - Attribute values and operators MUST be properly URL-encoded\n- Encrypted\
          \ attributes (if any) are supported with Equality (==) operator only\n"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "Query parameter to specify the Sort attributes.\n\nSorting criteria\
          \ can be specified as follows:\n?sort=[attributeName]\n\nSorting order is\
          \ specified by the left to right order of the fields listed. Default order\
          \ is ascending, but minus (-) prefix can be added to field to specify it\
          \ to descending.\n"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "include"
        in: "query"
        description: "Filter query parameter to specify which values to be included\
          \ in the response. Default = both (active as well as inactive)\n"
        required: false
        type: "string"
      - name: "isDefault"
        in: "query"
        description: "Filter query parameter to specify that the items with specified\
          \ value of default to be returned by the service. The value of True will\
          \ return the items where the default attribute is set to True. The value\
          \ of false will return the items where the default attribute is set to False.\
          \ If the query parameter is not specified or the value is anything other\
          \ than True/false, the service will return all the values applicable based\
          \ on the other query parameters supplied.\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "*OK* - Retrieval is successful.\n"
          headers:
            cache-control:
              type: "string"
              description: "Cache control\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ReferenceDataList"
        "304":
          description: "*Not Modified* - Indicates that the resource has not been\
            \ modified since the last access. \n"
        "400":
          description: "*Bad Request* - The server cannot process the request due\
            \ to malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: "*Service Unavailable* - The service being called is unavailable.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getReferenceData"
  /archive/customer/{customerId}:
    get:
      tags:
      - "Customer"
      security:
        - Bearer: []
      summary: "(beta)Retrieve customer from archive"
      description: "This operation retrieves a customer from Archive based on provided\
        \ custoemr Id.\n"
      operationId: "getArchivedCustomer"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of the Customer\n"
        required: true
        type: "string"
      - name: "Accept-Language"
        in: "header"
        description: "The locale of the client\n"
        required: false
        type: "string"
      - name: "salesChannel"
        in: "query"
        description: "Sales Channel.\n"
        required: false
        type: "string"
      responses:
        200:
          description: "*OK* - The customer was retrieved successfully.\n"
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        503:
          description: "*Service Unavailable* - The server cannot fulfill the request\
            \ due to a temporary overloading or maintenance of the server. Retry later.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-amdocs:
        public-roles:
        - "D1_CustomerManagement_getArchivedCustomer"
definitions:
  Customer:
    allOf:
    - $ref: "#/definitions/PartyRole"
    - properties:
        createdOn:
          type: "string"
          format: "date-time"
          description: "Date and time when the entity was created.\n"
        lastModifiedOn:
          type: "string"
          format: "date-time"
          description: "Date and time when the entity was last updated.\n"
        '@baseType':
          type: "string"
          description: "Base type of entity"
        '@type':
          type: "string"
          description: "type of Entity"
        '@schemaLocation':
          type: "string"
          description: "uri where the data model can be retrieved"
        customerType:
          type: "string"
          description: "The type of the customer such as Residential/Corporate etc.\n"
          x-amdocs:
            refdata: "customerType"
        customerSubType:
          type: "string"
          description: "The sub-type of customer such as Individual/Small Partnership\
            \ etc.\n"
          x-amdocs:
            refdata: "customerType"
        acquisitionDate:
          type: "string"
          format: "date-time"
          description: "The date of aquisition of the customer\n"
        description:
          type: "string"
          description: "The description of the customer\n"
        rank:
          type: "integer"
          description: "The rank of the customer\n"
        externalIdentifier:
          type: "array"
          description: "Defines the identification details of entity within an external\
            \ system.\n"
          items:
            $ref: "#/definitions/ExternalIdentifier"
        agreement:
          type: "array"
          description: "A list of agreement references (AgreementRef [*]). An agreement\
            \ represents a contract or arrangement, either written or verbal and sometimes\
            \ enforceable by law, such as a service level agreement or a customer\
            \ price agreement. An agreement involves a number of other business entities,\
            \ such as products, services, and resources and/or their specifications.\
            \ \n"
          items:
            $ref: "#/definitions/AgreementRef"
        extensions:
          $ref: "#/definitions/CustomerExtension"
    description: "Customer represents a person or organization that buys products\
      \ and services from the enterprise or receives free offers or services. \nCustomers\
      \ can also be other service providers who resell the enterprises products, other\
      \ service providers that lease the enterprise's resources for utilization by\
      \ the other \nservice provider's products and services, and so forth. Customer\
      \ resource contains information about the customer. \nMain attributes are its\
      \ identifier, name, status and validity, description, characteristics, contact\
      \ medium, related customer account, related party, customer credit profile information.\n"
  CreditInquiryEngagedPartyReferredType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditInquiryEngagedPartyReferredType:
          type: "string"
          description: "The type of the related party.\n"
          readOnly: true
    description: "Represents the Related Party Type.\n"
  PartyRole:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The unique identifier of customer\n"
      href:
        type: "string"
        description: "Hypertext reference to the customer\n"
      name:
        type: "string"
        description: "The name of the customer \n"
        x-amdocs-pii: "nameInfo:name"
      status:
        type: "string"
        description: "The status of customer.\n"
        x-amdocs:
          refdata: "customerStatus"
      statusReason:
        type: "string"
        description: "The text descriing the reason for status change\n"
        x-amdocs:
          refdata: "customerStatus"
      statusDate:
        type: "string"
        format: "date-time"
        description: "The date when the status was last updated. This will be updated\
          \ by the system internally.\n"
        readOnly: true
      validFor:
        $ref: "#/definitions/TimePeriod"
      characteristic:
        type: "array"
        description: "Describes the characteristics of customer such as customer hobbies,center\
          \ of interest etc. Apart from storage and retrieval no operations such as\
          \ filtering,sorting etc. will be supported on these v  alues.\nAs a part\
          \ of cross customer hierarchy below characteristics will be added\n- hasChildCustomer=true.\
          \ Indicator on parent customer if it has child customer\n- hasParentCustomer=true.\
          \ Indicator on child customer if it has a parent customer\n- customerHierarchyLevel=true.\
          \ Indicator for the level of customer within the cross hierarchy       \
          \   \n"
        items:
          $ref: "#/definitions/Characteristic"
      engagedParty:
        $ref: "#/definitions/PartyRefOrValue"
      relatedParty:
        type: "array"
        description: "Reference of the related party, could be a party reference or\
          \ a party role reference. A new party can be added or can be removed. \n"
        items:
          $ref: "#/definitions/RelatedPartyRef"
      account:
        type: "array"
        description: "A account may be a party account or an account receivable.\n"
        items:
          $ref: "#/definitions/AccountRefOrValue"
      paymentMethod:
        type: "array"
        description: "A payment method defines a specific mean of payment (e.g direct\
          \ debit).\n"
        items:
          $ref: "#/definitions/PaymentMethodRef"
      creditProfile:
        type: "array"
        description: "Credit profile for the party (containing credit scoring etc.).\
          \ By default only the current credit profile is retrieved. It can be used\
          \ as a list to give the party credit profiles history, the first one in\
          \ the list will be the current one\n"
        items:
          $ref: "#/definitions/CreditProfile"
      contactMedium:
        type: "array"
        description: "Describes the contact medium characteristics that could be used\
          \ to contact a Customer\n"
        items:
          $ref: "#/definitions/ContactMedium"
    description: "Customer resource\n"
  OverrideRecord:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The identifier of the id which was overriden.\n"
      characteristicId:
        type: "string"
        description: "The identifier of the characteristic which was overriden.\n"
      oldValue:
        type: "string"
        description: "The previous value which was overriden to new value.\n"
      newValue:
        type: "string"
        description: "The overriden value \n"
      overrideReason:
        type: "string"
        description: "The reason for overriding the value.\n"
        x-amdocs:
          refdata: "creditProfileOverrideReason"
      activityDate:
        type: "string"
        format: "date-time"
        description: "The date and time when the override activity happened\n"
      relatedParty:
        type: "array"
        items:
          $ref: "#/definitions/RelatedPartyRef"
        minItems: 1
    description: "Represents the Override activity performed.\n"
  OverrideHistory:
    type: "object"
    properties:
      creditProfileId:
        type: "string"
        description: "The identifier of the Credit Profile.\n"
      overrideRecord:
        type: "array"
        items:
          $ref: "#/definitions/OverrideRecord"
        minItems: 1
    description: "Override History record\n"
  AccountType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        accountType:
          type: "string"
          description: "The value of the type of party role.\n"
          readOnly: true
    description: "Represents the type of account.\n"
  CustomerContactMediumType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        customerContactMediumType:
          type: "string"
          description: "The value of the type of contact medium.\n"
          readOnly: true
        mediumType:
          type: "array"
          description: "The list of medium types for this contact medium.\n"
          items:
            $ref: "#/definitions/MediumType"
          minItems: 1
    description: "Represents the type of contact medium.\n"
  MediumType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        mediumType:
          type: "string"
          description: "The value of the type of contact medium.\n"
          readOnly: true
    description: "Represents the type of contact medium.\n"
  TimePeriod:
    type: "object"
    properties:
      startDateTime:
        type: "string"
        format: "date-time"
        description: "The time period start date and time.\n"
      endDateTime:
        type: "string"
        format: "date-time"
        description: "The time period end date and time.\n"
      extension:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
        x-amdocs:
          refDefinition: "TimePeriodExtension"
    description: "Time period\n"
  Characteristic:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Name of the Characteristic\n"
      value:
        type: "string"
        description: "Value of the Characteristic\n"
      valueType:
        type: "string"
        description: "The data type of the value\n"
    description: "Dynamic characteristics\n"
  PartyRefOrValue:
    type: "object"
    required:
    - "type"
    discriminator: "type"
    properties:
      type:
        type: "string"
        description: "Type of the entity PartyRef/Organization/Individual in instance.\
          \ A reference data attribute mapped to respective PartyType.\n"
      refType:
        type: "string"
        description: "Describes type of PartyRef. For example if type=PartyRef and\
          \ refType=Individual then it means its a PartyRefOrValue instance is representing\
          \ reference to Individual. This attribute is useful on cosumer side to deduce\
          \ the type of PartyReference.A reference data attribute mapped to respective\
          \ PartyReferredType.\n"
      id:
        type: "string"
        description: "Unique identifier of an existing party.\nPatchable - No\n"
      href:
        type: "string"
        description: "Hypertext reference to the existing related party.\nPatchable\
          \ - No\n"
      description:
        type: "string"
        description: "The description of the party.\n"
      '@referredType':
        type: "string"
        description: "A generic attribute indicating the name of class type of the\
          \ referred resource entity.\n"
        x-amdocs:
          refdata: "customerEngagedPartyReferredType"
    description: "This is base type which can represent either a reference (e.g. PartyRef)\
      \ or a party value (e.g.IndividualValue). The exact type can be deduced  using\
      \ type and refType attribute.\n"
  RelatedPartyRef:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique id of an existing party.\n"
      href:
        type: "string"
        description: "The self href for the existing related party.\n"
      name:
        type: "string"
        description: "The name of related party.\n"
        x-amdocs-pii: "nameInfo:name"
      role:
        type: "string"
        description: "The role of related party, a ref data mapped to respective party\
          \ role in context of the entity.\n"
        x-amdocs:
          refdata: "partyRole"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class\n"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships\n"
      '@type':
        type: "string"
        description: "Describes if it's Customer/Individual/Organazation, a ref data\
          \ mapped to respective party type in context of the entity.\nPatchable -\
          \ No\n"
        x-amdocs:
          refdata: "partyType"
      '@referredType':
        type: "string"
        description: "The type of the party/party role such as Individual/Organization/Customer/User\
          \ etc.A ref data mapped to respective party referredType in context of the\
          \ entity.\n"
        x-amdocs:
          refdata: "partyReferredType"
      validFor:
        $ref: "#/definitions/TimePeriod"
    description: "Contains reference to the related party.\n"
  AccountRefOrValue:
    type: "object"
    required:
    - "type"
    discriminator: "type"
    properties:
      id:
        type: "string"
        description: "The unique identifier of an existing account.        \n"
      href:
        type: "string"
        description: "The hypertext reference to the related account.\n"
      name:
        type: "string"
        description: "The name of related account.\n"
        x-amdocs-pii: "nameInfo:name"
      description:
        type: "string"
        description: "The description of account \n"
      type:
        type: "string"
        description: "The type of resource - e.g. AccountRef/FinancialAccountValue/BillingAccountValue,\
          \ A configuration parameter.\n"
      preferred:
        type: "boolean"
        description: "Indicates if this is preferred account. Preferred account are\
          \ used to for default processing. \nThis can be used for default logic.\n\
          For Billing Account two preferred account can exists, one each for ratingType\
          \ postpaid and prepaid.\n"
      refType:
        type: "string"
        description: "Describes type of AccountRef. For example if type=AccountRef\
          \ and refType=FinancialAccount then it means its a PartyRefOrValue instance\
          \ is representing reference to Financial acount. This attribute is useful\
          \ on cosumer side to deduce the type of PartyReference.\n"
        x-amdocs:
          refdata: "accountReferredType"
      ratingType:
        type: "string"
        description: "Rating Type associated with Billing Account. One of two possible\
          \ value postpaid or prepaid.\n"
        readOnly: true
    description: "An account may be a party account or an account receivable.\n"
  PaymentMethodRef:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique id of an existing Payment Method.\nPatchable - No\n"
      href:
        type: "string"
        description: "Hypertext reference to the existing related Payment Method.\n"
      name:
        type: "string"
        description: "The name of related Payment Method.\n"
        x-amdocs-npi: "paymentMethodInfo:name"
      type:
        type: "string"
        description: "Describes the type of Payment method like Credit Card, BankAccount\
          \ etc.\n"
        x-amdocs:
          protected-data:
            npi: "paymentMethodInfo:type"
          refdata: "customerPaymentMethodReferredType"
      preferred:
        type: "boolean"
        description: "If the method is the preferred one by the owner. Typically used\
          \ when querying for the payment methods of a specific customer or account.\n"
      validFor:
        $ref: "#/definitions/TimePeriod"
    description: "A payment method defines a specific mean of payment (e.g. direct\
      \ debit/credit card)\n"
  IndividualInvolvement:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the individual\n"
      givenName:
        type: "string"
        description: "Given name of the individual\n"
        x-amdocs-pii: "nameInfo:name"
      familyName:
        type: "string"
        description: "Family name of the individual\n"
        x-amdocs-pii: "nameInfo:name"
      status:
        type: "string"
        description: "Status of the individual. For example, initialized, validated,\
          \ active, etc...\n"
      involvement:
        type: "array"
        description: "Involvement of individual on the entities like Cusotmer, Billing\
          \ Account, Financial Account, Payment Method, etc...\n"
        items:
          $ref: "#/definitions/Involvement"
    description: "Individual and its involvement with customer via the entities like\
      \ Cusotmer, Billing Account, Financial Account, Payment Method, etc. \n"
  Involvement:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the entity\n"
      entityType:
        type: "string"
        description: "Type of the entity like FinancialAccount, BillingAccount, Customer,\
          \ PaymentMethod, etc...\n"
      individualRole:
        type: "string"
        description: "Role of the individual on the entity like member, billReciever,\
          \ owner, etc...\n"
    description: "Involvement of the entities like Cusotmer, Billing Account, Financial\
      \ Account, Payment Method on the Individual.\nExample: \n  {\n    \"id\": \"\
      FinancialAccount_13432323\",\n    \"entityType\": \"FinancialAccount\",\n  \
      \  \"individualRole\": \"owner\"\n  }\n"
  CustomerPaymentMethodReferredType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        customerPaymentMethodReferredType:
          type: "string"
          description: "The value of the type of payment method.\n"
          readOnly: true
    description: "Represents the type of payment method.\n"
  UpdateCustomerStatus:
    type: "object"
    properties:
      status:
        type: "string"
        description: "The status of customer to be changed to.\n"
      statusReason:
        type: "string"
        description: "The text descriing the reason for status change\n"
    description: "Describes the new status for customer\n"
  CustomerPreference:
    type: "object"
    properties:
      engagedPartyPreference:
        $ref: "#/definitions/PartyRefOrValue"
      billingAccountPreference:
        type: "array"
        items:
          $ref: "#/definitions/AccountRefOrValue"
      partyPrivacyProfilePreference:
        type: "array"
        items:
          $ref: "#/definitions/PartyPrivacyProfileRefOrValue"
      preferredPaymentMethod:
        type: "array"
        items:
          $ref: "#/definitions/PaymentMethodRefOrValue"
      notificationPreference:
        type: "array"
        items:
          $ref: "#/definitions/NotificationPreferenceRefOrValue"
      preferredContactMedium:
        type: "array"
        description: "The preferred contact mediums.\n"
        items:
          $ref: "#/definitions/ContactMedium"
      extensions:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
        x-amdocs:
          refDefinition: "CustomerPreferenceExtension"
    description: "Customer Preference consist of customer and related entity prefrences.\n"
  PartyPrivacyProfileRefOrValue:
    type: "object"
    discriminator: "@type"
    description: "Party Privacy Profile Method Ref Or Value.\n"
  PaymentMethodRefOrValue:
    type: "object"
    discriminator: "type"
    description: "Payment Method Ref Or Value.\n"
  NotificationPreferenceRefOrValue:
    type: "object"
    discriminator: "@type"
    description: "Notification Preference Ref Or Value.\n"
  ManageExternalIdentifier:
    type: "object"
    properties:
      action:
        type: "string"
        description: "The action performed on the order item - add and remove\n"
      externalIdentifier:
        type: "array"
        items:
          $ref: "#/definitions/ExternalIdentifier"
    description: "The management of the external identifier required [action, externalIdentifier]\n"
  CreditProfile:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique id of an existing creditProfile.\n"
      href:
        type: "string"
        description: "The url to get the details of the Credit Profile.\n"
      creditProfileDate:
        type: "string"
        format: "date-time"
        description: "The date the profile was established/created.\n"
      creditRiskRating:
        type: "integer"
        description: "This is an integer whose value is used to rate the risk.\n"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "The date when the profile was last updated.\n"
      status:
        type: "string"
        description: "The status of the credit profile.\n"
        x-amdocs:
          refdata: "transitionStateCreditProfile"
      creditScore:
        type: "integer"
        description: "A measure of a person's or an organization's creditworthiness\n\
          calculated on the basis of a combination of factors such as their income\
          \ and\ncredit history.\n"
      characteristic:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/CreditProfileCharacteristic"
        minItems: 0
      validFor:
        $ref: "#/definitions/TimePeriod"
      relatedPartyRole:
        $ref: "#/definitions/PartyRoleRef"
      relatedCreditParty:
        description: "A related Credit party to a credit profile.\n"
        $ref: "#/definitions/RelatedPartyRef"
      partyPrivacyProfile:
        $ref: "#/definitions/PartyPrivacyProfileRef"
      relatedParty:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/RelatedPartyRef"
        minItems: 0
      creditRating:
        type: "array"
        items:
          $ref: "#/definitions/PartyCreditRating"
        minItems: 0
      externalIdentifier:
        type: "array"
        description: "Defines the identification details of entity within an external\
          \ system.\n"
        items:
          $ref: "#/definitions/ExternalIdentifier"
      extensions:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
        x-amdocs:
          refDefinition: "CreditProfileExtension"
    description: "Credit profile for the party (containing credit scoring, ...). By\
      \ default only the current credit profile is retrieved. It can be used as a\
      \ list to give the party credit profiles history, the first one in the list\
      \ will be the current one.\n"
  CreditProfileCharacteristic:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The unique identifier of the Credit Profile Characteristic\n"
        readOnly: true
      name:
        type: "string"
        description: "Name of the Characteristic\n"
        readOnly: true
        x-amdocs:
          refdata: "creditProfileCharacteristicName"
      value:
        type: "string"
        description: "Value of the Characteristic\n"
        readOnly: true
      valueType:
        type: "string"
        description: "The data type of the value\n"
        readOnly: true
        x-amdcos:
          refdata: "characteristicValueType"
      category:
        type: "string"
        description: "The category to group the characteristics\n"
        readOnly: true
        x-amdocs:
          refdata: "creditProfileCharacteristicCategory"
      overridden:
        type: "boolean"
        description: "Indicates whether the value of the characteristic was overriden.\n"
        readOnly: true
    description: "Dynamic characteristics\n"
  PartyRoleRef:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique id of an existing party role.\n"
      href:
        type: "string"
        description: "The self href for the existing related party role.\n"
        readOnly: true
      name:
        type: "string"
        description: "The name of related party role.\n"
        x-amdocs-pii: "nameInfo:name"
      role:
        type: "string"
        description: "The role of related party role.\n"
      '@type':
        type: "string"
        description: "The class definition representing the actual entity.\n"
      '@referredType':
        type: "string"
        description: "The actual entity being referred by this reference. For example-\
          \ Customer, Vendor and so on.\n"
      validFor:
        $ref: "#/definitions/TimePeriod"
    description: "Reference of the Party Role.\n"
  PartyPrivacyProfileRef:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The unique identifier of the Privacy Profile\n"
      href:
        type: "string"
        description: "The reference url of the Privacy Profile.\n"
        readOnly: true
    description: "Reference of the Privacy Profile created to capture the consent\
      \ provided by the Party.\n"
  PartyCreditRating:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The unique identifier of the Party Credit Rating\n"
      ratingScore:
        type: "integer"
        description: "The Rating Score of the party\n"
        x-amdocs-npi: "creditProfileInfo:score"
      creditRiskRating:
        type: "integer"
        description: "This is an integer whose value is used to rate the risk.\n"
        x-amdocs-npi: "creditProfileInfo:rating"
      ratingAgencyName:
        type: "string"
        description: "Name of the agency who provided the rating score.\n"
        x-amdocs:
          refdata: "creditRatingAgencyName"
      ratingAgencyType:
        type: "string"
        description: "The type of the agency who provided the rating score.\n"
        x-amdocs:
          refdata: "creditRatingAgencyType"
      ratingReference:
        type: "string"
        description: "The reference provided by the Rating agency.\n"
        x-amdocs-npi: "creditProfileInfo:ratingReference"
      primary:
        type: "boolean"
        description: "Indicator of the primary rating score.\n"
      validFor:
        $ref: "#/definitions/TimePeriod"
      characteristic:
        type: "array"
        items:
          $ref: "#/definitions/Characteristic"
        minItems: 0
      extensions:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
        x-amdocs:
          refDefinition: "PartyCreditRatingExtension"
    description: "The Credit Rating of the Party as retrieved from the external Credit\
      \ Agencies.\n"
  ExternalIdentifier:
    allOf:
    - $ref: "#/definitions/Entity"
    - type: "object"
      properties:
        id:
          type: "string"
          description: "The unique ID of the entity in external system\n"
        owner:
          type: "string"
          description: "The system that owns the external id\n"
        externalIdentifierType:
          type: "string"
          description: "The type of entity in external system\n"
        version:
          type: "string"
          description: "The version of the external system that created the entity\n"
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "ExternalIdentifierExtension"
    description: "The reference to the external identifier of the external system\
      \ that created the entity\n"
  Entity:
    type: "object"
    properties:
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
    description: "Base entity schema for use in TMForum Open-APIs \n"
  ContactMedium:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique, auto-generated identifier\n"
      type:
        type: "string"
        description: "'deprecated: true (Aug-2020), This field might be removed in\
          \ future releases. Use <i>mediumType</i> attribute instead.'\n"
        x-amdocs:
          refdata: "contactMediumType"
      mediumType:
        type: "string"
        description: "Contact medium type like email address, telephone number, postal\
          \ address.\n"
        x-amdocs:
          refdata: "contactMediumType"
      preferred:
        type: "boolean"
        description: "Indicator for preferred contact medium for communication\n"
      validFor:
        $ref: "#/definitions/TimePeriod"
      characteristic:
        $ref: "#/definitions/MediumCharacteristic"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      extensions:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
        x-amdocs:
          refDefinition: "ContactMediumExtension"
    description: "Contact medium associated to the customer (e.g. email address, telephone\
      \ number etc). \n"
  MediumCharacteristic:
    type: "object"
    properties:
      type:
        type: "string"
        description: "'deprecated: true (Aug-2020), This field might be removed in\
          \ future releases. Use <i>contactType</i> attribute instead. A reference\
          \ data mapped to resective mediaum type'\n"
        x-amdocs:
          refdata:
          - "emailMediumType"
          - "telephoneMediumType"
          - "socialMediumType"
      contactType:
        type: "string"
        description: "contact type of medium (fax, mobile phone...).\n"
        x-amdocs:
          refdata:
          - "emailMediumType"
          - "telephoneMediumType"
          - "socialMediumType"
      emailAddress:
        type: "string"
        description: "The contact's email address for the ContactMedium type of email.\n"
        x-amdocs:
          search-filter:
            name: "contactMedium.characteristic.emailAddress"
        x-amdocs-pii: "contactInfo:email"
      number:
        type: "string"
        description: "'deprecated: true (Aug-2020), This field might be removed in\
          \ future releases. Use <i>phoneNumber</i> attribute instead.'\n"
        x-amdocs-pii: "contactInfo:telephoneNumber"
      faxNumber:
        type: "string"
        description: "The fax number of the contact\n"
        x-amdocs-pii: "contactInfo:faxNumber"
      phoneNumber:
        type: "string"
        description: "The primary phone number of the contact\n"
        x-amdocs-pii: "contactInfo:telephoneNumber"
      socialNetworkId:
        type: "string"
        description: "Identifier as a member of a social network.\n"
        x-amdocs-pii: "contactInfo:socialNetworkId"
      city:
        type: "string"
        description: "The city name for the contact's address for Contact Medium type\
          \ postal address.\n"
        x-amdocs-pii: "contactInfo:city"
      country:
        type: "string"
        description: "The country ISO code for the contact's address for Contact Medium\
          \ type postal address.\n"
        x-amdocs:
          protected-data:
            pii: "contactInfo:country"
          refdata: "country"
      postCode:
        type: "string"
        description: "The postcode for the contact's address for Contact Medium type\
          \ postal address.\n"
        x-amdocs-pii: "contactInfo:postCode"
      stateOrProvince:
        type: "string"
        description: "The state or province from contact's address for Contact Medium\
          \ type postal address.\n"
        x-amdocs:
          protected-data:
            pii: "contactInfo:state"
          refdata: "stateOrProvince"
      street1:
        type: "string"
        description: "The first street line for the contact's address for Contact\
          \ Medium type postal address.\n"
        x-amdocs-pii: "contactInfo:addressLine"
      street2:
        type: "string"
        description: "The second street line for the contact's address for Contact\
          \ Medium type postal address.\n"
        x-amdocs-pii: "contactInfo:addressLine"
      place:
        $ref: "#/definitions/PlaceRef"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      extensions:
        $ref: "#/definitions/MediumCharacteristicExtension"
    description: "Medium information for customer(e.g. email address, mobile number,fax\
      \ number). \n"
  PlaceRef:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of GeographicAddress,GeographicSite or GeographicLocation\n"
      '@referredType':
        type: "string"
        description: "Describes the type of entity such as GeographicAddress, GeographicSite\
          \ or GeographicLocation\n"
      '@type':
        type: "string"
        description: "Describes the type of entity \n"
      subPlace:
        type: "array"
        items:
          $ref: "#/definitions/SubPlaceRef"
    description: "A place reference is a pointer to either GeographicAddress,GeographicSubAddress,GeographicLocation\n"
  SubPlaceRef:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of entity such as GeographicSubAddress\n"
      '@referredType':
        type: "string"
        description: "Describes the type of entity such as GeographicSubAddress \n"
      '@type':
        type: "string"
        description: "Describes the type of entity \n"
    description: "A subplace reference is a pointer to GeographicSubAddress\n"
  AgreementRef:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A string. Unique identifier of a related entity\n"
      href:
        type: "string"
        description: "A string. Reference of the related entity\n"
      name:
        type: "string"
        description: "A string. Name of the agreement.\n"
        x-amdocs-pii: "nameInfo:name"
      '@referredType':
        type: "string"
        description: "A generic attribute indicating the name of class type of the\
          \ referred resource entity.\n"
      '@baseType':
        type: "string"
        description: "Base type of entity\n"
      '@type':
        type: "string"
        description: "type of Entity\n"
      '@schemaLocation':
        type: "string"
        description: "uri where the data model can be retrieved\n"
    description: "Agreement reference. An agreement represents a contract or arrangement,\
      \ either written or verbal and sometimes enforceable by law, such as a service\
      \ level agreement or a customer price agreement. An agreement involves a number\
      \ of other business entities, such as products, services, and resources and/or\
      \ their specifications\n"
  Error:
    type: "object"
    required:
    - "code"
    discriminator: "@type"
    properties:
      code:
        type: "string"
        description: "Error code relevant to an application, defined in the API or\
          \ in a common list\n"
      reason:
        type: "string"
        description: "Explanation of the reason for the error that can be displayed\
          \ to a user\n"
      message:
        type: "string"
        description: "Additional information about the error  and corrective actions\
          \ related to the error that can be displayed to a user\n"
      status:
        type: "string"
        description: "HTTP error code extension\n"
      referenceError:
        type: "string"
        format: "uri"
        description: "URI of the documentation describing the error\n"
      traceId:
        type: "string"
        description: "Unique tracker ID that is used to facilitate the troubleshooting\n"
      '@type':
        type: "string"
        description: "Type of the error\n"
      characteristic:
        type: "array"
        description: "Charachteristic parameters that are associated with the error\n"
        items:
          $ref: "#/definitions/ErrorCharacteristic"
    description: "Error response. This object is used when an API throws an error,\
      \ typically with a HTTP error response codes 3xx, 4xx, and 5xx\n"
  ErrorCharacteristic:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Non-localized name identifier of the characteristic\n"
      value:
        type: "string"
        description: "Value of the characteristic\n"
    description: "Parameter that is associated with the error entity\n"
  ValidationError:
    allOf:
    - $ref: "#/definitions/Error"
    - properties:
        validationMessage:
          type: "array"
          description: "The validation messages\n"
          items:
            $ref: "#/definitions/ValidationMessage"
    description: "Validation error object that is used when an API throws an error,\
      \ typically with a HTTP error response code 422\n"
  ValidationMessage:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Non-localized name identifier of the validation message\n"
      text:
        type: "string"
        description: "Localized descriptive validation message\n"
      type:
        type: "string"
        description: "Type of the validation message\n"
      subtype:
        type: "string"
        description: "Distinct code which represents the issue\n"
      parameter:
        type: "array"
        description: "Name/value pair of the validation message\n"
        items:
          $ref: "#/definitions/ValidationMessageParameter"
      severity:
        type: "string"
        description: "Severity of the validation message\n"
      path:
        type: "string"
        description: "Path to the resource part to which the validation message is\
          \ related\n"
      resource:
        type: "array"
        description: "Resource that is associated with the message\n"
        items:
          $ref: "#/definitions/RelatedResource"
    description: "Message associated with the validation failure\n"
  ValidationMessageParameter:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Name of the parameter\n"
      value:
        type: "array"
        description: "Value of the parameter\n"
        items:
          type: "string"
    description: "Name/value pair of the validation message parameter\n"
  RelatedResource:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Type of the resource\n"
      id:
        type: "string"
        description: "Unique identifier of the resource\n"
      variable:
        type: "array"
        description: "Variables related to the resource\n"
        items:
          $ref: "#/definitions/Variable"
      containedResource:
        type: "array"
        description: "Other resources, specs, or offers that are linked to the message\
          \ but did not trigger the validation message\n"
        items:
          $ref: "#/definitions/ContainedResource"
    description: "Resource that is associated with the validation message (that is,\
      \ triggered the validation failure)\n"
  Variable:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Type of the variable\n"
      id:
        type: "string"
        description: "Unique identifier of the variable\n"
      value:
        type: "array"
        description: "Value(s) of the variable\n"
        items:
          type: "string"
    description: "Variable that is associated with a resource\n"
  ContainedResource:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Type of the resource\n"
      id:
        type: "string"
        description: "Unique identifier of the resource\n"
      variable:
        type: "array"
        description: "Variables that are related to the resource\n"
        items:
          $ref: "#/definitions/Variable"
    description: "Resources that are contained in the validation message\n"
  ErrorResponse:
    type: "object"
    properties:
      code:
        type: "string"
        description: "The code associated with the error\n"
      message:
        type: "string"
        description: "The message associated with the error\n"
      link:
        type: "string"
        format: "url"
        description: "The self-reference to the item\n"
      rel:
        type: "string"
        description: "The relation type of the item\n"
        default: "help"
      traceId:
        type: "string"
        description: "The unique trace ID used to correlate the error returned to\
          \ the client with the server\n"
    description: "The response containing the descriptive error text and error code\n\
      type: object\n"
  PatchElement:
    properties:
      op:
        type: "string"
        description: "The operation associated with this patched resource part. Valid\
          \ values are 'add' or 'remove' or 'replace'.\n"
      path:
        type: "string"
        description: "The path of this resource part within the patched resource.\
          \ For example, '/note' or '/name' or '/orderItem/quantity'.\n"
      value:
        type: "object"
        description: "The value of the patched resource part\n"
        properties: {}
    description: "The patched resource part\n"
  HistoryItem:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the history record."
      modifiedBy:
        type: "string"
        description: "The user who modified the resource for given history field"
      modifiedOn:
        type: "string"
        format: "date-time"
        description: "The date time at which resource was modified for given history\
          \ field"
      salesChannel:
        type: "string"
        description: "Channel through which resource was modified for given history\
          \ field"
      transactionID:
        type: "string"
        description: "Transaction ID through which resource is modified"
      itemType:
        type: "string"
        description: "Type of history item"
      HistoryData:
        type: "array"
        items:
          $ref: "#/definitions/HistoryData"
      entity:
        $ref: "#/definitions/EntityRef"
  HistoryData:
    type: "object"
    properties:
      value:
        type: "object"
        description: "Any object depending on resource for which history is captured"
        properties: {}
  EntityRef:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of a entity being refered."
      href:
        type: "string"
        description: "Unique Reference of the entity."
      name:
        type: "string"
        description: "Name of the entity."
        x-amdocs-pii: "nameInfo:name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Contains reference to an Entity.\n"
  CustomerType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        customerType:
          type: "string"
          description: "The value of the type of customer.\n"
          readOnly: true
        customerSubType:
          type: "array"
          items:
            $ref: "#/definitions/CustomerSubType"
          minItems: 1
        engagedParty:
          type: "array"
          description: "The engaged party which can be a an individual and/or organization\n"
          items:
            $ref: "#/definitions/CustomerType_engagedParty"
          minItems: 0
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CustomerTypeExtension"
    description: "Represents the type of Customer.\n"
  ReferenceData:
    type: "object"
    required:
    - "@type"
    properties:
      href:
        type: "string"
        description: "Reference to retrieve the details of the item.\n"
        readOnly: true
      shortLabelDisplay:
        type: "string"
        description: "Displayable short text for the value of item.\n"
        readOnly: true
      fullLabelDisplay:
        type: "string"
        description: "Full displayable text value of the item.\n"
        readOnly: true
      selectionDisplay:
        type: "string"
        description: "Displayable text value for the item to be used for displaying\
          \ the items on the UI.\n"
        readOnly: true
      active:
        type: "boolean"
        description: "Indicator whether the item is active or not.\n"
        readOnly: true
      default:
        type: "boolean"
        description: "Indicator whether the item is default in the list.\n"
      '@type':
        type: "string"
        description: "Indicates the (class) type of ReferenceData.\n"
    description: "Represents the Type of reference data.\n"
  CustomerSubType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        customerSubType:
          type: "string"
          description: "The value of the sub type of customer.\n"
          readOnly: true
        customerType:
          type: "string"
          description: "The value of the type of customer.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CustomerTypeExtension"
    description: "Represents the sub type of Customer.\n"
  AccountReferredType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        accountReferredType:
          type: "string"
          description: "The value of the type of party role.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "AccountReferredTypeExtension"
    description: "Represents the type of account.\n"
  CustomerStatus:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        customerStatus:
          type: "string"
          description: "The value of the status of Customer.\n"
          readOnly: true
        transitionToStatus:
          type: "array"
          description: "The list of statuses eligible for transition.\n"
          readOnly: true
          items:
            $ref: "#/definitions/TransitionToStatus"
          minItems: 0
        statusChangeReason:
          type: "array"
          description: "(Deprecated and will be removed in future) The list of status\
            \ change reason codes.\n"
          readOnly: true
          items:
            $ref: "#/definitions/StatusChangeReason"
          minItems: 0
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CustomerStatusExtension"
    description: "Represents the Status of Customer.\n"
  CustomerEngagedPartyType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        customerEngagedPartyType:
          type: "string"
          description: "The value of the type of party.\n"
          readOnly: true
    description: "Represents the Party Type.\n"
  TransitionToStatus:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        transitionToStatus:
          type: "string"
          description: "The value of the status of customer.\n"
          readOnly: true
        statusChangeReason:
          type: "array"
          description: "The value of status change reason.\n"
          readOnly: true
          items:
            $ref: "#/definitions/StatusChangeReason"
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "TransitionToStatusExtension"
    description: "The list of statuses eligible for transition.\n"
  StatusChangeReason:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        statusChangeReason:
          type: "string"
          description: "The value status change reason.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "StatusChangeReasonExtension"
    description: "Represents status change reason.\n"
  CustomerEngagedPartyReferredType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        customerEngagedPartyReferredType:
          type: "string"
          description: "The type of the related party.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CustomerEngagedPartyReferredTypeExtension"
    description: "Represents the Related Party Type.\n"
  CustomerRelatedPartyReferredType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        customerRelatedPartyReferredType:
          type: "string"
          description: "The type of the related party.\n"
          readOnly: true
        customerRelatedPartyReferredTypeRole:
          type: "array"
          description: "The roles of the related party\n"
          items:
            $ref: "#/definitions/CustomerRelatedPartyReferredTypeRole"
          minItems: 0
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CustomerRelatedPartyReferredTypeExtension"
    description: "Represents the Related Party Type.\n"
  CustomerRelatedPartyReferredTypeRole:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        customerRelatedPartyReferredType:
          type: "string"
          description: "The type of the related party.\n"
          readOnly: true
        customerRelatedPartyReferredTypeRole:
          type: "string"
          description: "The value of the related party role.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CustomerRelatedPartyReferredTypeRoleExtension"
    description: "Represents the Related Party Role.\n"
  CustomerRelatedPartyType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        customerRelatedPartyType:
          type: "string"
          description: "The type of the related party.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CustomerRelatedPartyTypeExtension"
    description: "Represents the Related Party Type.\n"
  CreditProfileCharacteristicName:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditProfileCharacteristicName:
          type: "string"
          description: "Name of the Characteristic.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditProfileCharacteristicNameExtension"
    description: "Represents the Name of the characteristic.\n"
  CharacteristicValueType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        characteristicValueType:
          type: "string"
          description: "The value type of the Characteristic.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CharacteristicValueTypeExtension"
    description: "Represents the Name of the CharacteristicName.\n"
  CreditProfileRelatedPartyReferredType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditProfileRelatedPartyReferredType:
          type: "string"
          description: "The type of the related party.\n"
          readOnly: true
        creditProfileRelatedPartyReferredTypeRole:
          type: "array"
          description: "The roles of the related party\n"
          items:
            $ref: "#/definitions/CreditProfileRelatedPartyReferredTypeRole"
          minItems: 0
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditProfileRelatedPartyReferredTypeExtension"
    description: "Represents the Related Party Type.\n"
  CreditProfileRelatedPartyReferredTypeRole:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditProfileRelatedPartyReferredType:
          type: "string"
          description: "The type of the related party role.\n"
          readOnly: true
        creditProfileRelatedPartyReferredTypeRole:
          type: "string"
          description: "The value of the related party role.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditProfileRelatedPartyReferredTypeRoleExtension"
    description: "Represents the Related Party Role.\n"
  CreditProfileRelatedPartyRoleReferredType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditProfileRelatedPartyRoleReferredType:
          type: "string"
          description: "The type of the related party role.\n"
          readOnly: true
        creditProfileRelatedPartyRoleReferredTypeRole:
          type: "array"
          description: "The roles of the related party role\n"
          items:
            $ref: "#/definitions/CreditProfileRelatedPartyRoleReferredTypeRole"
          minItems: 0
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditProfileRelatedPartyRoleReferredTypeExtension"
    description: "Represents the Related Party Type.\n"
  CreditProfileRelatedPartyRoleReferredTypeRole:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditProfileRelatedPartyRoleReferredType:
          type: "string"
          description: "The type of the related party role.\n"
          readOnly: true
        creditProfileRelatedPartyRoleReferredTypeRole:
          type: "string"
          description: "The role of the related party role.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditProfileRelatedPartyRoleReferredTypeRoleExtension"
    description: "Represents the Role of Related Party Role.\n"
  CreditProfileCharacteristicCategory:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditProfileCharacteristicCategory:
          type: "string"
          description: "Category of the Characteristic.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditProfileCharacteristicCategoryExtension"
    description: "Represents the Category of the characteristic.\n"
  CreditProfileOverrideReason:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditProfileOverrideReason:
          type: "string"
          description: "The reason for overriding the characteristic value.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditProfileOverrideReasonExtension"
    description: "Represents the reason for overriding the characteristic value.\n"
  CreditProfileOverrideRelatedPartyRoleReferredType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditProfileOverrideRelatedPartyRoleReferredType:
          type: "string"
          description: "The type of the related party role.\n"
          readOnly: true
        creditProfileOverrideRelatedPartyRoleReferredTypeRole:
          type: "array"
          description: "The roles of the related party role\n"
          items:
            $ref: "#/definitions/CreditProfileOverrideRelatedPartyRoleReferredTypeRole"
          minItems: 0
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditProfileOverrideRelatedPartyRoleReferredTypeExtension"
    description: "Represents the Related Party Type.\n"
  CreditProfileOverrideRelatedPartyRoleReferredTypeRole:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditProfileOverrideRelatedPartyRoleReferredType:
          type: "string"
          description: "The type of the related party role.\n"
          readOnly: true
        creditProfileOverrideRelatedPartyRoleReferredTypeRole:
          type: "string"
          description: "The role of the related party role.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditProfileRelatedPartyRoleReferredTypeRoleExtension"
    description: "Represents the Role of Related Party Role.\n"
  CustomerPaymentMethodType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        customerPaymentMethodType:
          type: "string"
          description: "The value of the type of payment method.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CustomerPaymentMethodTypeExtension"
    description: "Represents the type of payment method.\n"
  CreditProfileStatus:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditProfileStatus:
          type: "string"
          description: "The value of the status of Credit Profile.\n"
          readOnly: true
        transitionToStatus:
          type: "array"
          description: "The list of statuses eligible for transition.\n"
          readOnly: true
          items:
            $ref: "#/definitions/CreditProfileTransitionToStatus"
          minItems: 0
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditProfileStatusExtension"
    description: "Represents the Status of the Credit Profile.\n"
  CreditProfileTransitionToStatus:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        transitionToStatus:
          type: "string"
          description: "The value of the status of customer.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditProfileTransitionToStatusExtension"
    description: "The list of statuses eligible for transition.\n"
  CreditRatingAgencyName:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditRatingAgencyName:
          type: "string"
          description: "Name of the Credit Rating Agency.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditRatingAgencyNameExtension"
    description: "Represents the Name of the Credit Rating Agency.\n"
  CreditRatingAgencyType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditRatingAgencyType:
          type: "string"
          description: "Type of the Credit Rating Agency.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditRatingAgencyTypeExtension"
    description: "Represents the Type of the Credit Rating Agency.\n"
  CreditRatingCharacteristicName:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditRatingCharacteristicName:
          type: "string"
          description: "Name of the Characteristic.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditRatingCharacteristicNameExtension"
    description: "Represents the Name of the characteristic.\n"
  CreditInquiryStatus:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditInquiryStatus:
          type: "string"
          description: "The value of the status of Credit Inquiry.\n"
          readOnly: true
        transitionToStatus:
          type: "array"
          description: "The list of statuses eligible for transition.\n"
          readOnly: true
          items:
            $ref: "#/definitions/CreditInquiryTransitionToStatus"
          minItems: 0
        creditInquiryResult:
          type: "array"
          description: "(Deprecated and will be removed in future)The list of results\
            \ derived from the status.\n"
          readOnly: true
          items:
            $ref: "#/definitions/CreditInquiryResult"
          minItems: 0
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditInquiryStatusExtension"
    description: "Represents the Status of the Credit Inquiry.\n"
  CreditInquiryTransitionToStatus:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        transitionToStatus:
          type: "string"
          description: "The value of the status of customer.\n"
          readOnly: true
        creditInquiryResult:
          type: "array"
          description: "The list of results derived from the status.\n"
          readOnly: true
          items:
            $ref: "#/definitions/CreditInquiryResult"
          minItems: 0
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditInquirTransitionToStatusExtension"
    description: "The list of statuses eligible for transition.\n"
  CreditInquiryResult:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditInquiryResult:
          type: "string"
          description: "The value of the result.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditInquiryResultExtension"
    description: "Represents status change reason.\n"
  CreditInquiryRelatedPartyReferredType:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditInquiryRelatedPartyReferredType:
          type: "string"
          description: "The type of the related party.\n"
          readOnly: true
        creditInquiryRelatedPartyReferredTypeRole:
          type: "array"
          description: "The roles of the related party\n"
          items:
            $ref: "#/definitions/CreditInquiryRelatedPartyReferredTypeRole"
          minItems: 0
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditInquiryRelatedPartyReferredTypeExtension"
    description: "Represents the Related Party Type.\n"
  CreditInquiryRelatedPartyReferredTypeRole:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        creditInquiryRelatedPartyReferredType:
          type: "string"
          description: "The type of the related party.\n"
          readOnly: true
        creditInquiryRelatedPartyReferredTypeRole:
          type: "string"
          description: "The value of the related party role.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "CreditInquiryRelatedPartyReferredTypeRoleExtension"
    description: "Represents the Related Party Role.\n"
  ReferenceDataList:
    allOf:
    - $ref: "#/definitions/ReferenceData"
    - type: "object"
      properties:
        name:
          type: "string"
          description: "Key value of reference data.\n"
          readOnly: true
        extensions:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
          x-amdocs:
            refDefinition: "ReferenceDataListExtension"
        referenceDataList:
          type: "array"
          description: "The value of child level reference data.\n"
          readOnly: true
          items:
            $ref: "#/definitions/ReferenceDataList"
          minItems: 0
    description: "Represents Generic Reference Data list.\n"
  CustomerType_engagedParty:
    type: "object"
    properties:
      engagedParty:
        type: "string"
        description: "The value of the engaged party.\n"
        readOnly: true
  MigrationInformation:
    type: "object"
    properties:
      migrationProcess:
        type: "string"
        description: "Represents the system that performed the migration. Can represent\
          \ a system (like MoD, i.e. Migration on Demand) or a batch ID, if the migration\
          \ was performed by batch migration."
        maxLength: 200
  MediumCharacteristicExtension:
    type: "object"
    properties:
      streetName:
        type: "string"
        description: "Street Name"
        readOnly: true
        x-amdocs:
          protected-data:
            pii: "contactInfo:addressLine"
      streetNumber:
        type: "string"
        description: "Street Number"
        readOnly: true
        x-amdocs:
          protected-data:
            pii: "contactInfo:addressLine"
      verificationStatus:
        type: "string"
        description: "Verification Status"
        x-amdocs:
          refdata: "verificationStatus"
      additionalNumber:
        type: "string"
        description: "The number the customer dialed (e.g. VF Call center number)"
      additional1:
        type: "string"
        description: "Additional1 to Postal Address"
        x-amdocs:
          protected-data:
            pii: "contactInfo:name"
      additional2:
        type: "string"
        description: "Additional2 to Postal Address"
      geographicAddressType:
        type: "string"
        description: "Relevant for the Postal Address.Contains the GA type"
        readOnly: true
        x-amdocs:
          refdata: "addressTypeRole"
  CustomerExtension:
    type: "object"
    properties:
      migrationInformation:
        description: "Holds the information related to migration."
        $ref: "#/definitions/MigrationInformation"
responses:
  "400-BadRequest":
    description: "*Bad Request* - The server cannot process the request due to malformed\
      \ syntax. The response can be caused by missing mandatory query parameters,\
      \ invalid value in the query parameters, validation exceptions, and so on.\n"
    schema:
      $ref: "#/definitions/ErrorResponse"
  "404-NotFound":
    description: "*Not Found* - The server did not find anything matching the request\
      \ URI. The response can be caused by missing path parameters, invalid web resource,\
      \ and so on.\n"
    schema:
      $ref: "#/definitions/ErrorResponse"
  "409-Conflict":
    description: "*Conflict* - The server cannot complete the request due to a conflict\
      \ with the current state of the resource.\n"
    schema:
      $ref: "#/definitions/ErrorResponse"
  "412-PreconditionFailed":
    description: "*Precondition Failed* - Indicates that the precondition given in\
      \ one or more of the request-header fields evaluated to false when it was tested\
      \ on the server.\n"
    schema:
      $ref: "#/definitions/ErrorResponse"
  "429-TooManyRequests":
    description: "*Too Many Requests* - The request could not be completed due to\
      \ duplicate request within the specific amount of time.\n"
    headers:
      Retry-After:
        type: "string"
        description: "The response HTTP header to indicate how long the user agent\
          \ should wait before making a follow-up request.\n"
    schema:
      $ref: "#/definitions/ErrorResponse"
  "500-InternalServerError":
    description: "*Internal Server Error* - The server encountered an unexpected condition\
      \ that prevented it from fulfilling the request.\n"
    schema:
      $ref: "#/definitions/ErrorResponse"
  "502-BadGateway":
    description: "*Bad Gateway* - The server encountered an unexpected condition when\
      \ calling another service.\n"
    schema:
      $ref: "#/definitions/ErrorResponse"
  "503-ServiceUnavailable":
    description: "*Service Unavailable* - The service being called is unavailable.\n"
    schema:
      $ref: "#/definitions/ErrorResponse"
